#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,-92,-94,-88,57,58,269,-503,-90,61,269,59,60,62,23,24,66',
'67,-82,304,540,594,606,22,28,27,89,88,90,91,838,-84,17,636,-64,569,575',
'570,7,41,6,9,93,92,636,83,50,85,84,86,-89,87,94,95,-93,81,82,652,38',
'39,-435,636,532,675,653,531,635,-435,202,203,-90,-75,-503,-95,779,264',
'-92,635,-89,758,36,596,595,30,605,-82,52,202,203,54,741,32,268,-503',
'635,40,268,100,-84,574,202,203,99,18,304,563,-86,-80,79,73,75,76,77',
'78,-92,-435,-92,74,80,-92,-506,-90,-82,-90,539,56,-90,-92,53,-82,-274',
'37,63,64,65,-84,51,-274,-274,-274,57,58,-84,-274,-274,61,-274,59,60',
'62,255,256,66,67,-81,781,398,304,-85,254,28,27,89,88,90,91,-274,-274',
'216,-274,-274,-274,-274,-274,-82,41,304,-87,93,92,-84,83,50,85,84,86',
'258,87,94,95,563,81,82,264,38,39,636,-274,-274,-274,-274,-274,-274,-274',
'-274,-274,-274,-274,-274,-274,-274,584,775,-274,-274,-274,207,625,100',
'211,562,-274,52,99,-91,54,269,253,-274,635,-274,40,-274,-274,-274,-274',
'-274,-274,-274,215,-274,563,-274,-91,79,73,75,76,77,78,-439,563,199',
'74,80,-274,-274,-439,-85,200,-274,56,519,-274,53,-93,-83,37,63,64,65',
'784,51,570,-444,707,57,58,563,202,203,61,774,59,60,62,23,24,66,67,594',
'264,264,599,769,22,28,27,89,88,90,91,-505,100,17,562,-438,198,99,-505',
'-94,41,268,-438,93,92,583,83,50,85,84,86,-88,87,94,95,594,81,82,-440',
'38,39,-505,-83,559,100,-440,-91,261,-91,99,73,-91,202,203,262,572,-83',
'224,74,596,595,207,573,100,211,562,658,52,99,532,54,224,534,100,251',
'562,40,100,99,-83,-268,558,99,100,18,706,-83,-268,99,79,73,75,76,77',
'78,596,595,597,74,80,100,589,562,861,784,99,56,632,590,53,571,-509,37',
'63,64,65,-441,51,-509,-509,-509,57,58,-441,-509,-509,61,-509,59,60,62',
'255,256,66,67,-268,-509,202,203,707,254,287,291,89,88,90,91,-509,-509',
'216,-509,-509,-509,-509,-509,532,41,443,534,93,92,768,83,50,85,84,86',
'-435,87,94,95,594,81,82,-435,38,39,480,-509,-509,-509,-509,-509,-509',
'-509,-509,-509,-509,-509,-509,-509,-509,-437,790,-509,-509,-509,207',
'622,-437,211,-432,-509,52,757,-95,54,532,-432,-509,534,-509,40,-509',
'-509,-509,-509,-509,-509,-509,215,-509,-509,-509,791,79,73,75,76,77',
'78,596,595,607,74,80,-509,-509,100,-83,706,-509,56,99,-509,53,-91,-509',
'37,63,64,65,-90,51,-509,-509,-509,57,58,-509,-509,-509,61,-509,59,60',
'62,255,256,66,67,546,-509,-509,-509,549,254,287,291,89,88,90,91,-509',
'-509,216,-509,-509,-509,-509,-509,549,41,297,298,93,92,794,83,50,85',
'84,86,-442,87,94,95,594,81,82,-442,38,39,795,-509,-509,-509,-509,-509',
'-509,-509,-509,-509,-509,-509,-509,-509,-509,803,784,-509,-509,-509',
'207,759,-509,211,549,-509,52,798,-509,54,-509,478,-509,600,-509,40,-509',
'-509,-509,-509,-509,-509,-509,215,-509,-509,-509,784,79,73,75,76,77',
'78,596,595,592,74,80,-509,-509,-509,-509,807,-509,56,808,-509,53,-91',
'-274,37,63,64,65,547,51,-274,-274,-274,57,58,-274,-274,-274,61,-274',
'59,60,62,255,256,66,67,515,516,-274,-274,810,254,287,291,89,88,90,91',
'-274,-274,216,-274,-274,-274,-274,-274,546,41,202,203,93,92,543,83,50',
'85,84,86,522,87,94,95,594,81,82,523,38,39,604,-274,-274,-274,-274,-274',
'-274,-274,-274,-274,-274,-274,-274,-274,-274,803,784,-274,-274,-274',
'207,625,-274,211,480,-274,52,760,-274,54,-274,536,-274,-505,-274,40',
'-274,-274,-274,-274,-274,-274,-274,215,-274,441,-274,812,79,73,75,76',
'77,78,596,595,601,74,80,-274,-274,-274,-274,535,-274,56,608,-274,53',
'-93,-282,37,63,64,65,611,51,-282,-282,-282,57,58,-282,-282,-282,61,-282',
'59,60,62,255,256,66,67,340,339,-282,-282,614,254,287,291,89,88,90,91',
'-282,-282,216,-282,-282,-282,-282,-282,304,41,340,339,93,92,487,83,50',
'85,84,86,904,87,94,95,-254,81,82,905,38,39,820,-282,-282,-282,-282,-282',
'-282,-282,-282,-282,-282,-282,-282,-282,-282,-444,100,-282,-282,-282',
'207,99,-282,211,273,-282,52,822,-282,54,-282,825,-282,826,-282,40,-282',
'-282,-282,-282,-282,-282,-282,215,-282,903,-282,652,79,73,75,76,77,78',
'653,224,-80,74,80,-282,-282,-282,-282,-88,-282,56,828,-282,53,487,-370',
'37,63,64,65,521,51,-370,-370,-370,57,58,-370,-370,-370,61,-370,59,60',
'62,255,256,66,67,304,-370,-370,-370,520,254,287,291,89,88,90,91,-370',
'-370,216,-370,-370,-370,-370,-370,-256,41,615,-255,93,92,264,83,50,85',
'84,86,258,87,94,95,304,81,82,273,38,39,513,-370,-370,-370,-370,-370',
'-370,-370,-370,-370,-370,-370,-370,-370,-370,519,100,-370,-370,-370',
'207,99,-370,211,264,-370,52,506,-370,54,-370,505,-370,251,-370,40,-370',
'-370,-370,-370,-370,-370,-370,215,-370,-370,-370,504,79,73,75,76,77',
'78,264,-63,-86,74,80,-370,-370,-370,-370,-94,-370,56,839,-370,53,840',
'-269,37,63,64,65,841,51,-269,-269,-269,57,58,-269,-269,-269,61,-269',
'59,60,62,255,256,66,67,264,264,-269,-269,-269,254,287,291,89,88,90,91',
'-269,-269,216,-269,-269,-269,-269,-269,743,41,243,224,93,92,844,83,50',
'85,84,86,258,87,94,95,845,81,82,675,38,39,224,-269,-269,-269,-269,-269',
'-269,-269,-269,-269,-269,-269,-269,-269,-269,201,100,-269,-269,-269',
'207,99,-269,211,847,-269,52,487,-269,54,-269,641,-269,251,-269,40,-269',
'-269,-269,-269,-269,-269,-269,215,-269,-254,-269,851,79,73,75,76,77',
'78,480,224,-87,74,80,-269,-269,-269,-269,-95,-269,56,-269,-269,53,224',
'-525,37,63,64,65,856,51,-525,-525,-525,57,58,-525,-525,-525,61,-525',
'59,60,62,23,24,66,67,478,-525,-525,-525,858,22,28,27,89,88,90,91,-525',
'-525,17,-525,-525,-525,-525,-525,476,41,212,445,93,92,444,83,50,85,84',
'86,710,87,94,95,864,81,82,866,38,39,867,-525,-525,-525,-525,-525,-525',
'-525,-525,-525,-525,-525,-525,-525,-525,617,100,-525,-525,-525,207,99',
'-525,211,264,-525,52,304,-525,54,-525,570,-525,702,-525,40,-525,-525',
'-525,-525,-525,-525,-525,18,-525,-525,-525,699,79,73,75,76,77,78,442',
'877,-84,74,80,-525,-525,-525,-525,-92,-525,56,-257,-525,53,707,-525',
'37,63,64,65,697,51,-525,-525,-525,57,58,-525,-525,-525,61,-525,59,60',
'62,255,256,66,67,409,878,-525,616,747,254,28,27,89,88,90,91,-525,-525',
'216,-525,-525,-525,-525,-525,880,41,687,396,93,92,387,83,50,85,84,86',
'258,87,94,95,-506,81,82,549,38,39,580,-443,-82,-81,384,890,891,578,-443',
'-90,-89,-321,-525,683,-276,682,576,896,-321,-525,207,-276,406,211,264',
'-525,52,408,407,54,897,253,100,100,706,40,825,99,99,825,-275,826,681',
'215,649,296,-525,-275,79,73,75,76,77,78,304,579,-443,74,80,-525,295',
'-525,906,675,-525,56,-321,243,53,-276,-525,37,63,64,65,525,51,-525,-525',
'-525,57,58,-525,-525,-525,61,-525,59,60,62,255,256,66,67,654,-275,-525',
'912,243,254,287,291,89,88,90,91,-525,-525,216,-525,-525,-525,-525,-525',
'667,41,681,197,93,92,196,83,50,85,84,86,258,87,94,95,195,81,82,194,38',
'39,665,224,228,233,234,235,230,232,240,241,236,237,-525,217,218,-274',
'922,238,239,-525,207,825,-274,211,264,-525,52,-506,924,54,925,641,221',
'107,227,40,223,222,219,220,231,229,225,215,226,-75,-525,224,79,73,75',
'76,77,78,664,96,439,74,80,-525,242,-525,-227,440,-525,56,662,,53,,-274',
'37,63,64,65,8,51,,221,,57,58,223,222,,61,,59,60,62,23,24,66,67,102,103',
'104,105,106,22,28,27,89,88,90,91,,,17,-275,,441,,612,7,41,-275,9,93',
'92,,83,50,85,84,86,-268,87,94,95,,81,82,-268,38,39,,224,228,233,234',
'235,230,232,240,241,236,237,-274,217,218,-275,,238,239,-274,36,,-275',
'30,-506,,52,,-275,54,,32,221,,227,40,223,222,219,220,231,229,225,18',
'226,-268,,224,79,73,75,76,77,78,511,,-443,74,80,,242,512,-227,-443,',
'56,,-274,53,,-275,37,63,64,65,8,51,,221,,57,58,223,222,,61,,59,60,62',
'23,24,66,67,102,103,104,105,106,22,28,27,89,88,90,91,,,17,510,,-443',
',612,7,41,,9,93,92,,83,50,85,84,86,580,87,94,95,,81,82,793,38,39,,224',
'228,233,234,235,230,232,240,241,236,237,-274,217,218,-276,,238,239,-274',
'36,,-276,30,-506,,52,,,54,,32,221,,227,40,223,222,219,220,231,229,225',
'18,226,579,,,79,73,75,76,77,78,,,,74,80,,242,,,873,,56,,-274,53,,-276',
'37,63,64,65,,51,,830,831,57,58,832,94,95,61,,59,60,62,23,24,66,67,102',
'103,104,105,106,22,28,27,89,88,90,91,,,17,337,336,340,339,,,41,,,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235,230',
'232,240,241,236,237,,217,218,,,238,239,,207,,,211,212,,52,,,54,,,221',
',227,40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74',
'80,,242,633,,689,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,337,336,340,339,,,41,,,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235,230',
'232,240,241,236,237,,217,218,689,,238,239,,207,,,211,,,52,,,54,,,221',
',227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75,76,77,78,,,',
'74,80,,242,337,336,340,339,56,,,53,,,37,63,64,65,224,51,,,,57,58,,,',
'61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,221,,216,,223',
'222,219,220,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,',
'224,228,233,234,235,230,232,240,241,236,237,,217,218,873,,238,239,,207',
',,211,,,52,,,54,,,221,,227,40,223,222,219,220,231,229,225,215,226,,',
',79,73,75,76,77,78,,,,74,80,,242,337,336,340,339,56,,,53,,,37,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90',
'91,,551,17,332,330,329,,331,7,41,,9,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217,218',
',,238,239,,36,,,30,,,52,,,54,,32,221,,227,40,223,222,219,220,231,229',
'225,18,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37,63,64',
'65,224,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88',
'90,91,221,,216,,223,222,219,220,,41,,,93,92,,83,50,85,84,86,258,87,94',
'95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217,218',
',,238,239,,207,,,211,,,52,,,54,,253,221,251,227,40,223,222,219,220,231',
'229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89',
'88,90,91,,551,216,332,330,329,,331,,41,,,93,92,,83,50,85,84,86,258,87',
'94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217',
'218,,,238,239,,207,,,211,,,52,,,54,,253,221,251,227,40,223,222,219,220',
'231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,',
',37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28',
'27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,',
'81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217,218,',
',238,239,,207,,,211,,,52,,,54,,253,221,251,227,40,223,222,219,220,231',
'229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,224,228,233,234,235,230,232,240,241,236,237,,217,218,,,238,239,',
'36,,,30,,,52,,,54,,32,221,,227,40,223,222,219,220,231,229,225,18,226',
',,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37,63,64,65,8,51,,',
',57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,',
',,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233',
'234,235,230,232,240,241,236,237,,217,218,,,238,239,,36,,,30,,,52,,,54',
',32,221,,227,40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77',
'78,,,,74,80,,242,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,224,228,233,234,235,230,232,240,241',
'236,237,224,217,218,,,238,239,,,,,,693,,,211,238,239,52,,221,54,227',
',223,222,219,220,231,229,225,221,226,,,223,222,219,220,,79,73,75,76',
'77,78,,,242,74,80,,551,,332,330,329,56,331,,53,,,292,63,64,65,8,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,554,22,28,27,89,88,90,91,800',
',17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224',
'228,233,234,235,230,232,240,241,236,237,,217,218,,,238,239,,36,,,30',
',,52,,,54,,32,221,,227,40,223,222,219,220,231,229,225,18,226,,,,79,73',
'75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,',
'9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235',
'230,232,240,241,236,237,,217,218,,,238,239,,36,,,277,,,52,,,54,,32,221',
',227,40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74',
'80,,242,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,224,228,233,234,235,230,232,240,241,236,237,224',
'217,218,,,238,239,,,,,,285,,,282,238,239,52,,221,54,227,281,223,222',
'219,220,231,229,225,221,226,227,,223,222,219,220,,79,73,75,76,77,78',
',,242,74,80,,551,,332,330,329,56,331,,53,,,292,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,554,254,287,291,89,88,90,91,557,,216',
',,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,224,228,233,234,235',
'230,232,240,241,236,237,224,217,218,,,238,239,,,,,,285,,,211,238,239',
'52,,221,54,227,,223,222,219,220,231,229,225,221,226,227,,223,222,219',
'220,,79,73,75,76,77,78,,,242,74,80,,,,294,,,56,,,53,,,292,63,64,65,8',
'51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,551',
'17,332,330,329,,331,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,',
'38,39,,,,,,,,,,554,,,,,,,,557,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,-526,-526,-526',
'-526,230,232,,,-526,-526,,,,,,238,239,,36,,,30,,,52,,,54,,32,221,,227',
'40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,224,228,233,234,235,230,232,,,236,237,,,,,,238',
'239,,36,,,30,,,52,,,54,,32,221,,227,40,223,222,219,220,231,229,225,18',
'226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,',
'216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228',
'233,234,235,230,232,240,,236,237,,,,,,238,239,,207,,,211,,,52,,,54,',
'641,221,251,227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235,230,232',
'240,241,236,237,,-526,-526,,,238,239,,207,,,211,,,52,,,54,,,221,,227',
'40,223,222,219,220,231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236',
'237,,-526,-526,,,238,239,,207,,,211,,,52,,,54,,,221,,227,40,223,222',
'219,220,231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,224,-526,-526,-526,-526,230,232,,,-526,-526,,,,,,238',
'239,,207,,,211,,,52,,,54,,,221,,227,40,223,222,219,220,231,229,225,215',
'226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,',
',,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,,,,,',
',,,,,,,,,,238,239,,36,,,30,,,52,,,54,,32,221,,227,40,223,222,219,220',
',,225,18,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90',
'91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39',
',224,-526,-526,-526,-526,230,232,,,-526,-526,,,,,,238,239,,207,,,211',
',,52,,,54,,253,221,,227,40,223,222,219,220,231,229,225,215,226,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,224,-526,-526,-526',
'-526,230,232,,,-526,-526,,,,,,238,239,,207,,,211,,,52,,,54,,253,221',
',227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86',
',87,94,95,,81,82,,38,39,,224,,,,,,,,,,,,,,,,238,239,,207,,,211,,,52',
',,54,,,221,,227,40,223,222,219,220,,,225,18,226,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,258,87,94,95,,81,82,,38,39,,224,,,,,,,,,,,,,,,,238,239,,207,,',
'211,,,52,,,54,,253,221,,227,40,223,222,219,220,,,225,215,226,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,224,,,,,,,,,,,,',
',,,238,239,,207,,,211,,,52,,,54,,,221,,227,40,223,222,219,220,,,225',
'215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,-526,-526',
'-526,-526,230,232,,,-526,-526,,,,,,238,239,,207,,,211,,,52,,,54,,,221',
',227,40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86',
',87,94,95,,81,82,,38,39,,224,-526,-526,-526,-526,230,232,,,-526,-526',
',,,,,238,239,,36,,,30,,,52,,,54,,32,221,,227,40,223,222,219,220,231',
'229,225,18,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91',
',,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,100,,,,,99,56,,,53,,,37,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,323,,332,330,329',
',331,,,,,,,,,,,,,,,,,352,,,30,,,52,,,54,,32,,,,334,,,,,,,,337,336,340',
'339,,79,73,75,76,77,78,762,,,74,80,,,,,,,56,,,53,,,292,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,288,,,93,92,,83,50,85,84,357,,87,94,95,,81,82,735,,332,330',
'329,,331,,,,,,,,,,,,,,363,,,358,,,211,,,52,,,54,,,,,,334,,,,,,,,337',
'336,340,339,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91',
',,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,398,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,',
',211,,,52,,,54,,641,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,735,,332',
'330,329,,331,,,,,,,,,,,,,,,,,885,,,211,,,52,,,54,,,,,,334,,,,,,,,337',
'336,340,339,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,-502,-502,-502,,-502,,,,-502,-502',
',,,-502,,-502,-502,-502,-502,-502,-502,-502,,-502,,,,-502,-502,-502',
'-502,-502,-502,-502,,,-502,,,,,,,-502,,,-502,-502,,-502,-502,-502,-502',
'-502,-502,-502,-502,-502,,-502,-502,,-502,-502,,,,,,,,,,,,,,,,,,,,,-502',
',,-502,-502,,-502,,,-502,,-502,,-502,,-502,,,,,,,,-502,,-502,,,-502',
'-502,-502,-502,-502,-502,,,,-502,-502,,,,,,,-502,,,-502,,,-502,-503',
'-503,-503,,-503,,,,-503,-503,,,,-503,,-503,-503,-503,-503,-503,-503',
'-503,,-503,,,,-503,-503,-503,-503,-503,-503,-503,,,-503,,,,,,,-503,',
',-503,-503,,-503,-503,-503,-503,-503,-503,-503,-503,-503,,-503,-503',
',-503,-503,,,,,,,,,,,,,,,,,,,,,-503,,,-503,-503,,-503,,,-503,,-503,',
'-503,,-503,,,,,,,,-503,,-503,,,-503,-503,-503,-503,-503,-503,,,,-503',
'-503,,,,,,,-503,,,-503,,,-503,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,7,41,6,9,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,',
',18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,398,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,',
',,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,6,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,',
',,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89',
'88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,',
'41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86',
',87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,',
',40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,54,,415,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,',
'83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,54,,415,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,',
',56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94',
'95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,',
',,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,253,,,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,',
'93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',207,,,211,,,52,,,54,,253,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,37,-508,-508,-508,,-508,,,,-508,-508,,,,-508,',
'-508,-508,-508,-508,-508,-508,-508,,,,,,-508,-508,-508,-508,-508,-508',
'-508,,,-508,,,,,,,-508,,,-508,-508,,-508,-508,-508,-508,-508,-508,-508',
'-508,-508,,-508,-508,,-508,-508,,,,,,,,,,,,,,,,,,,,,-508,,,-508,-508',
',-508,,,-508,,-508,,-508,,-508,,,,,,,,-508,,,,,-508,-508,-508,-508,-508',
'-508,,,,-508,-508,,,,,,,-508,,,-508,,,-508,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,',
'93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207',
',,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,',
',,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,',
',,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94',
'95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,',
',,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,-507,-507,-507,,-507,,,,-507,-507,,,,-507',
',-507,-507,-507,-507,-507,-507,-507,,,,,,-507,-507,-507,-507,-507,-507',
'-507,,,-507,,,,,,,-507,,,-507,-507,,-507,-507,-507,-507,-507,-507,-507',
'-507,-507,,-507,-507,,-507,-507,,,,,,,,,,,,,,,,,,,,,-507,,,-507,-507',
',-507,,,-507,,-507,,-507,,-507,,,,,,,,-507,,,,,-507,-507,-507,-507,-507',
'-507,,,,-507,-507,,,,,,,-507,,,-507,,,-507,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,',
'41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54',
',,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,746,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,',
'87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,447,52,,,54,,',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89',
'88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,',
'9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,',
',,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,',
',,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,',
',,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,',
',,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,',
',41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,',
'74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,',
',,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,',
',211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94',
'95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,',
',,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,',
',211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94',
'95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,',
',,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59',
'60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30',
',,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,253,,251,,40',
',,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,207,,,211,,,496,,,54,,253,,251,,40,,,,,,,,215,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,',
',41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,,,,,,,,,,,,',
',,,,,,,207,,,211,,500,52,,,54,,253,,251,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,',
',211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67',
',,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86',
',87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,253',
',,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,36,,,277,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,',
',,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,',
',,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,323,,332,330,329,,331',
',,,,,,,,,,,,,,,,285,,,211,,,52,,,54,,,,,,334,,542,,,,,,337,336,340,339',
',79,73,75,76,77,78,,,,74,80,,,,508,,,56,,,53,,,292,63,64,65,8,51,,,',
'57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,',
',,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,36,,,277,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41',
',9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,',
',,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,207,,,211,,,52,,,54,,641,,251,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88',
'90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,323,,332,330,329,,331,,,,,',
',,,,,,,,,,,285,,,282,,,52,,,54,,,,,,334,,,,,,,,337,336,340,339,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84',
'357,,87,94,95,,81,82,735,,332,330,329,,331,,,,,,,,,,,,,,,,,358,,,211',
',,52,,,54,,,,,,334,729,,,,,,,337,336,340,339,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,292,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24',
'66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32',
',,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,735,,332,330,329,,331,,,,,',
',,,,,,,,,,,285,,,282,,,52,,,54,,,,,,334,729,,,,,,,337,336,340,339,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,63,64,65,,51,,,,57,58,,',
',61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,',
',41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,207,,,211,525,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54',
',32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,',
',,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65',
',51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,',
',17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,',
'54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,253,,,,40,,,,,,,',
'215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,',
',,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,323,,332,330,329,,331,,,,,,,,,,,,,,,,,285',
',,282,,,52,,,54,,,,,,334,318,,,,,,,337,336,340,339,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,292,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,415,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,,,,,,,,,,,,,,,,,,,,,,,285,,,282,,,52,,,54,,,,,,,,,,,,,,,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,155,166,156,179,152,172',
'162,161,187,190,177,160,159,154,180,188,189,164,153,167,171,173,165',
'158,,,,174,181,176,175,168,178,163,151,170,169,182,183,184,185,186,150',
'157,148,149,146,147,,110,112,109,,111,,,,,,,,,141,142,,138,120,121,122',
'129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140',
'137,136,132,133,127,125,117,139,118,,,145,191,,,,,,,,,,80,155,166,156',
'179,152,172,162,161,187,190,177,160,159,154,180,188,189,164,153,167',
'171,173,165,158,,,,174,181,176,175,168,178,163,151,170,169,182,183,184',
'185,186,150,157,148,149,146,147,,110,112,,,111,,,,,,,,,141,142,,138',
'120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135',
'134,,119,140,137,136,132,133,127,125,117,139,118,,,145,191,,,,,,,,,',
'80,155,166,156,179,152,172,162,161,187,190,177,160,159,154,180,188,189',
'164,153,167,171,173,165,158,,,,174,181,176,175,168,178,163,151,170,169',
'182,183,184,185,186,150,157,148,149,146,147,,110,112,,,111,,,,,,,,,141',
'142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,',
',,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,,,145,191',
',,,,,,,,,80,155,166,156,179,152,172,162,161,187,190,177,160,159,154',
'180,188,189,164,153,167,171,173,165,158,,,,174,181,176,175,168,178,163',
'151,170,169,182,183,184,185,186,150,157,148,149,146,147,,110,112,,,111',
',,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130',
'131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118',
',,145,191,,,,,,,,,,80,155,166,156,179,152,172,162,161,187,190,177,160',
'159,154,180,188,189,164,153,167,171,173,165,158,,,,174,181,176,175,168',
'178,163,151,170,169,182,183,184,185,186,150,157,148,149,146,147,,110',
'112,,,111,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,',
'143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125',
'117,139,118,,,145,155,166,156,179,152,172,162,161,187,190,177,160,159',
'154,180,188,189,164,153,167,171,173,165,158,,,,174,181,176,175,168,178',
'163,151,170,169,182,183,184,185,186,150,157,148,149,146,147,,110,112',
'394,393,111,,395,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124',
',,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127',
'125,117,139,118,,,145,155,166,156,179,152,172,162,161,187,190,177,160',
'159,154,180,188,189,164,153,167,171,173,165,158,,,,174,181,176,175,168',
'178,163,151,170,169,182,183,184,185,186,150,157,148,149,146,147,,110',
'112,394,393,111,,395,,,,,,,141,142,,138,120,121,122,129,126,128,,,123',
'124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133',
'127,125,117,139,118,,,145,155,166,156,179,152,172,162,161,187,190,177',
'160,159,154,180,188,189,164,153,167,171,173,165,158,,,,174,181,176,372',
'371,373,370,151,170,169,182,183,184,185,186,150,157,148,149,368,369',
',366,112,85,84,367,,87,,,,,,,141,142,,138,120,121,122,129,126,128,,',
'123,124,,,,143,144,130,131,,,,,,377,,,,,,,135,134,,119,140,137,136,132',
'133,127,125,117,139,118,484,427,145,,485,,,,,,,,,141,142,,138,120,121',
'122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119',
'140,137,136,132,133,127,125,117,139,118,484,427,145,,485,,,,,,,,,141',
'142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,',
',,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,626,427,145',
',627,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132,133,127,125,117',
'139,118,721,433,145,,853,,,,,,,,,141,142,,138,120,121,122,129,126,128',
',,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132',
'133,127,125,117,139,118,628,433,145,,629,,,,,,,,,141,142,,138,120,121',
'122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119',
'140,137,136,132,133,127,125,117,139,118,484,427,145,,485,,,,,,,,,141',
'142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,',
',,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,917,427,145',
',918,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132,133,127,125,117',
'139,118,919,433,145,,920,,,,,,,,,141,142,,138,120,121,122,129,126,128',
',,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132',
'133,127,125,117,139,118,714,427,145,,715,,,,,,,,,141,142,,138,120,121',
'122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,264,,,,,,,135,134',
',119,140,137,136,132,133,127,125,117,139,118,429,433,145,,431,,,,,,',
',,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131',
',,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,716',
'433,145,,717,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124',
',,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127',
'125,117,139,118,626,427,145,,627,,,,,,,,,141,142,,138,120,121,122,129',
'126,128,,,123,124,,,,143,144,130,131,,,,,,264,,,,,,,135,134,,119,140',
'137,136,132,133,127,125,117,139,118,628,433,145,,629,,,,,,,,,141,142',
',138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,',
',,135,134,,119,140,137,136,132,133,127,125,117,139,118,423,427,145,',
'424,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132,133,127,125,117',
'139,118,672,433,145,,673,,,,,,,,,141,142,,138,120,121,122,129,126,128',
',,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132',
'133,127,125,117,139,118,721,433,145,,719,,,,,,,,,141,142,,138,120,121',
'122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119',
'140,137,136,132,133,127,125,117,139,118,484,427,145,,485,,,,,,,,,141',
'142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,264',
',,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,669,427,145',
',670,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132,133,127,125,117',
'139,118,484,427,145,,485,,,,,,,,,141,142,,138,120,121,122,129,126,128',
',,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132',
'133,127,125,117,139,118,,,145' ]
        racc_action_table = arr = ::Array.new(23432, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,918,574,350,0,0,55,357,917,0,26,0,0,0,0,0,0,0,669,41,317,602',
'388,0,0,0,0,0,0,0,760,670,0,487,664,348,354,348,0,0,0,0,0,0,497,0,0',
'0,0,0,810,0,0,0,717,0,0,491,0,0,357,498,309,666,491,309,487,357,591',
'591,714,664,357,353,668,26,715,497,760,627,0,602,602,0,388,669,0,306',
'306,0,602,0,55,357,498,0,26,584,670,352,679,679,584,0,491,857,574,350',
'0,0,0,0,0,0,918,357,918,0,0,918,717,917,669,917,317,0,917,627,0,669',
'431,0,510,510,510,670,510,431,431,431,510,510,670,431,431,510,431,510',
'510,510,510,510,510,510,810,679,349,591,717,510,510,510,510,510,510',
'510,431,431,510,431,431,431,431,431,714,510,306,353,510,510,715,510',
'510,510,510,510,510,510,510,510,850,510,510,671,510,510,474,431,431',
'431,431,431,431,431,431,431,431,431,431,431,431,362,659,431,431,431',
'510,431,857,510,857,431,510,857,919,510,289,510,431,474,431,510,431',
'431,431,431,431,431,431,510,431,343,431,716,510,510,510,510,510,510',
'373,344,13,510,510,431,431,373,431,13,431,510,442,431,510,431,672,510',
'496,496,496,893,496,893,206,565,496,496,809,726,726,496,656,496,496',
'496,496,496,496,496,383,289,674,383,651,496,496,496,496,496,496,496',
'919,850,496,850,372,13,850,716,442,496,289,372,496,496,362,496,496,496',
'496,496,206,496,496,496,381,496,496,370,496,496,672,672,341,362,370',
'919,25,919,362,71,919,446,446,25,351,716,677,71,383,383,496,351,343',
'496,343,496,496,343,310,496,678,310,344,496,344,496,726,344,672,886',
'338,726,565,496,565,672,886,565,496,496,496,496,496,496,381,381,381',
'496,496,809,375,809,809,680,809,496,446,375,496,351,429,496,519,519',
'519,369,519,429,429,429,519,519,369,429,429,519,429,519,519,519,519',
'519,519,519,886,429,15,15,566,519,519,519,519,519,519,519,429,429,519',
'429,429,429,429,429,313,519,208,313,519,519,650,519,519,519,519,519',
'367,519,519,519,390,519,519,367,519,519,640,429,429,429,429,429,429',
'429,429,429,429,429,429,429,429,371,685,429,429,429,519,429,371,519',
'366,429,519,626,208,519,684,366,429,684,429,519,429,429,429,429,429',
'429,429,519,429,429,429,686,519,519,519,519,519,519,390,390,390,519',
'519,429,429,566,429,566,429,519,566,429,519,429,628,519,520,520,520',
'626,520,628,628,628,520,520,628,628,628,520,628,520,520,520,520,520',
'520,520,689,628,628,628,691,520,520,520,520,520,520,520,628,628,520',
'628,628,628,628,628,326,520,37,37,520,520,693,520,520,520,520,520,368',
'520,520,520,379,520,520,368,520,520,694,628,628,628,628,628,628,628',
'628,628,628,628,628,628,628,907,907,628,628,628,520,628,628,520,695',
'628,520,698,628,520,628,638,628,384,628,520,628,628,628,628,628,628',
'628,520,628,628,628,703,520,520,520,520,520,520,379,379,379,520,520',
'628,628,628,628,709,628,520,711,628,520,628,629,520,521,521,521,325',
'521,629,629,629,521,521,629,629,629,521,629,521,521,521,521,521,521',
'521,292,292,629,629,713,521,521,521,521,521,521,521,629,629,521,629',
'629,629,629,629,323,521,342,342,521,521,322,521,521,521,521,521,299',
'521,521,521,385,521,521,299,521,521,387,629,629,629,629,629,629,629',
'629,629,629,629,629,629,629,701,701,629,629,629,521,629,629,521,314',
'629,521,630,629,521,629,312,629,721,629,521,629,629,629,629,629,629',
'629,521,629,299,629,722,521,521,521,521,521,521,385,385,385,521,521',
'629,629,629,629,311,629,521,404,629,521,629,28,521,480,480,480,410,480',
'28,28,28,480,480,28,28,28,480,28,480,480,480,480,480,480,480,549,549',
'28,28,416,480,480,480,480,480,480,480,28,28,480,28,28,28,28,28,308,480',
'825,825,480,480,623,480,480,480,480,480,884,480,480,480,418,480,480',
'884,480,480,731,28,28,28,28,28,28,28,28,28,28,28,28,28,28,35,274,28',
'28,28,480,274,28,480,28,28,480,732,28,480,28,733,28,735,28,480,28,28',
'28,28,28,28,28,480,28,884,28,772,480,480,480,480,480,480,772,301,35',
'480,480,28,28,28,28,35,28,480,738,28,480,618,27,480,478,478,478,298',
'478,27,27,27,478,478,27,27,27,478,27,478,478,478,478,478,478,478,772',
'27,27,27,297,478,478,478,478,478,478,478,27,27,478,27,27,27,27,27,745',
'478,422,613,478,478,291,478,478,478,478,478,478,478,478,478,288,478',
'478,287,478,478,285,27,27,27,27,27,27,27,27,27,27,27,27,27,27,296,724',
'27,27,27,478,724,27,478,27,27,478,280,27,478,27,279,27,478,27,478,27',
'27,27,27,27,27,27,478,27,27,27,278,478,478,478,478,478,478,430,276,296',
'478,478,27,27,27,27,296,27,478,763,27,478,764,50,478,476,476,476,767',
'476,50,50,50,476,476,50,50,50,476,50,476,476,476,476,476,476,476,770',
'771,50,50,50,476,476,476,476,476,476,476,50,50,476,50,50,50,50,50,606',
'476,773,452,476,476,776,476,476,476,476,476,476,476,476,476,777,476',
'476,778,476,476,453,50,50,50,50,50,50,50,50,50,50,50,50,50,50,14,3,50',
'50,50,476,3,50,476,782,50,476,263,50,476,50,476,50,476,50,476,50,50',
'50,50,50,50,50,476,50,785,50,786,476,476,476,476,476,476,252,454,14',
'476,476,50,50,50,50,14,50,476,50,50,476,455,425,476,525,525,525,801',
'525,425,425,425,525,525,425,425,425,525,425,525,525,525,525,525,525',
'525,249,425,425,425,804,525,525,525,525,525,525,525,425,425,525,425',
'425,425,425,425,248,525,216,210,525,525,209,525,525,525,525,525,568',
'525,525,525,813,525,525,816,525,525,817,425,425,425,425,425,425,425',
'425,425,425,425,425,425,425,424,730,425,425,425,525,730,425,525,425',
'425,525,818,425,525,425,567,425,561,425,525,425,425,425,425,425,425',
'425,525,425,425,425,556,525,525,525,525,525,525,207,834,424,525,525',
'425,425,425,425,424,425,525,835,425,525,811,483,525,903,903,903,552',
'903,483,483,483,903,903,483,483,483,903,483,903,903,903,903,903,903',
'903,192,842,483,423,615,903,903,903,903,903,903,903,483,483,903,483',
'483,483,483,483,843,903,541,96,903,903,78,903,903,903,903,903,903,903',
'903,903,853,903,903,854,903,903,360,883,423,615,77,859,860,360,883,423',
'615,42,483,528,779,527,358,868,42,483,903,779,109,903,483,483,903,109',
'109,903,869,903,811,347,811,903,870,811,347,872,906,873,526,903,489',
'36,483,906,903,903,903,903,903,903,490,360,883,903,903,483,34,483,885',
'517,483,903,42,20,903,779,486,903,531,531,531,514,531,486,486,486,531',
'531,486,486,486,531,486,531,531,531,531,531,531,531,492,906,486,895',
'493,531,531,531,531,531,531,531,486,486,531,486,486,486,486,486,509',
'531,902,12,531,531,11,531,531,531,531,531,531,531,531,531,10,531,531',
'9,531,531,507,655,655,655,655,655,655,655,655,655,655,655,486,655,655',
'673,911,655,655,486,531,913,673,531,486,486,531,673,914,531,916,531',
'655,6,655,531,655,655,655,655,655,655,655,531,655,504,486,451,531,531',
'531,531,531,531,503,1,205,531,531,486,655,486,655,205,486,531,499,,531',
',673,531,901,901,901,901,901,,451,,901,901,451,451,,901,,901,901,901',
'901,901,901,901,5,5,5,5,5,901,901,901,901,901,901,901,,,901,576,,205',
',413,901,901,576,901,901,901,,901,901,901,901,901,286,901,901,901,,901',
'901,286,901,901,,413,413,413,413,413,413,413,413,413,413,413,719,413',
'413,513,,413,413,719,901,,513,901,719,,901,,576,901,,901,413,,413,901',
'413,413,413,413,413,413,413,901,413,286,,450,901,901,901,901,901,901',
'284,,283,901,901,,413,284,413,283,,901,,719,901,,513,901,894,894,894',
'894,894,,450,,894,894,450,450,,894,,894,894,894,894,894,894,894,275',
'275,275,275,275,894,894,894,894,894,894,894,,,894,284,,283,,631,894',
'894,,894,894,894,,894,894,894,894,894,692,894,894,894,,894,894,692,894',
'894,,631,631,631,631,631,631,631,631,631,631,631,920,631,631,925,,631',
'631,920,894,,925,894,920,,894,,,894,,894,631,,631,894,631,631,631,631',
'631,631,631,894,631,692,,,894,894,894,894,894,894,,,,894,894,,631,,',
'822,,894,,920,894,,925,894,17,17,17,,17,,739,739,17,17,739,739,739,17',
',17,17,17,17,17,17,17,663,663,663,663,663,17,17,17,17,17,17,17,,,17',
'822,822,822,822,,,17,,,17,17,,17,17,17,17,17,,17,17,17,,17,17,,17,17',
',473,473,473,473,473,473,473,473,473,473,473,,473,473,,,473,473,,17',
',,17,17,,17,,,17,,,473,,473,17,473,473,473,473,473,473,473,17,473,,',
',17,17,17,17,17,17,,,,17,17,,473,473,,795,,17,,,17,,,17,18,18,18,,18',
',,,18,18,,,,18,,18,18,18,18,18,18,18,,,,,,18,18,18,18,18,18,18,,,18',
'795,795,795,795,,,18,,,18,18,,18,18,18,18,18,,18,18,18,,18,18,,18,18',
',761,761,761,761,761,761,761,761,761,761,761,,761,761,543,,761,761,',
'18,,,18,,,18,,,18,,,761,,761,18,761,761,761,761,761,761,761,18,761,',
',,18,18,18,18,18,18,,,,18,18,,761,543,543,543,543,18,,,18,,,18,534,534',
'534,469,534,,,,534,534,,,,534,,534,534,534,534,534,534,534,,,,,,534',
'534,534,534,534,534,534,469,,534,,469,469,469,469,,534,,,534,534,,534',
'534,534,534,534,534,534,534,534,,534,534,,534,534,,676,676,676,676,676',
'676,676,676,676,676,676,,676,676,897,,676,676,,534,,,534,,,534,,,534',
',,676,,676,534,676,676,676,676,676,676,676,534,676,,,,534,534,534,534',
'534,534,,,,534,534,,676,897,897,897,897,534,,,534,,,534,889,889,889',
'889,889,,,,889,889,,,,889,,889,889,889,889,889,889,889,,,,,,889,889',
'889,889,889,889,889,,800,889,800,800,800,,800,889,889,,889,889,889,',
'889,889,889,889,889,,889,889,889,,889,889,,889,889,,754,754,754,754',
'754,754,754,754,754,754,754,,754,754,,,754,754,,889,,,889,,,889,,,889',
',889,754,,754,889,754,754,754,754,754,754,754,889,754,,,,889,889,889',
'889,889,889,,,,889,889,,754,,,,,889,,,889,,,889,22,22,22,470,22,,,,22',
'22,,,,22,,22,22,22,22,22,22,22,,,,,,22,22,22,22,22,22,22,470,,22,,470',
'470,470,470,,22,,,22,22,,22,22,22,22,22,22,22,22,22,,22,22,,22,22,,749',
'749,749,749,749,749,749,749,749,749,749,,749,749,,,749,749,,22,,,22',
',,22,,,22,,22,749,22,749,22,749,749,749,749,749,749,749,22,749,,,,22',
'22,22,22,22,22,,,,22,22,,749,,,,,22,,,22,,,22,23,23,23,,23,,,,23,23',
',,,23,,23,23,23,23,23,23,23,,,,,,23,23,23,23,23,23,23,,557,23,557,557',
'557,,557,,23,,,23,23,,23,23,23,23,23,23,23,23,23,,23,23,,23,23,,436',
'436,436,436,436,436,436,436,436,436,436,,436,436,,,436,436,,23,,,23',
',,23,,,23,,23,436,23,436,23,436,436,436,436,436,436,436,23,436,,,,23',
'23,23,23,23,23,,,,23,23,,436,,,,,23,,,23,,,23,24,24,24,,24,,,,24,24',
',,,24,,24,24,24,24,24,24,24,,,,,,24,24,24,24,24,24,24,,,24,,,,,,,24',
',,24,24,,24,24,24,24,24,24,24,24,24,,24,24,,24,24,,524,524,524,524,524',
'524,524,524,524,524,524,,524,524,,,524,524,,24,,,24,,,24,,,24,,24,524',
'24,524,24,524,524,524,524,524,524,524,24,524,,,,24,24,24,24,24,24,,',
',24,24,,524,,,,,24,,,24,,,24,539,539,539,539,539,,,,539,539,,,,539,',
'539,539,539,539,539,539,539,,,,,,539,539,539,539,539,539,539,,,539,',
',,,,539,539,,539,539,539,,539,539,539,539,539,,539,539,539,,539,539',
',539,539,,421,421,421,421,421,421,421,421,421,421,421,,421,421,,,421',
'421,,539,,,539,,,539,,,539,,539,421,,421,539,421,421,421,421,421,421',
'421,539,421,,,,539,539,539,539,539,539,,,,539,539,,421,,,,,539,,,539',
',,539,540,540,540,540,540,,,,540,540,,,,540,,540,540,540,540,540,540',
'540,,,,,,540,540,540,540,540,540,540,,,540,,,,,,540,540,,540,540,540',
',540,540,540,540,540,,540,540,540,,540,540,,540,540,,19,19,19,19,19',
'19,19,19,19,19,19,,19,19,,,19,19,,540,,,540,,,540,,,540,,540,19,,19',
'540,19,19,19,19,19,19,19,540,19,,,,540,540,540,540,540,540,,,,540,540',
',19,,,,,540,,,540,,,540,546,546,546,,546,,,,546,546,,,,546,,546,546',
'546,546,546,546,546,,,,,,546,546,546,546,546,546,546,,,546,,,,,,,546',
',,546,546,,546,546,546,546,546,,546,546,546,,546,546,744,744,744,744',
'744,744,744,744,744,744,744,458,744,744,,,744,744,,,,,,546,,,546,458',
'458,546,,744,546,744,,744,744,744,744,744,744,744,458,744,,,458,458',
'458,458,,546,546,546,546,546,546,,,744,546,546,,699,,699,699,699,546',
'699,,546,,,546,560,560,560,560,560,,,,560,560,,,,560,,560,560,560,560',
'560,560,560,,,,,699,560,560,560,560,560,560,560,699,,560,,,,,,560,560',
',560,560,560,,560,560,560,560,560,,560,560,560,,560,560,,560,560,,246',
'246,246,246,246,246,246,246,246,246,246,,246,246,,,246,246,,560,,,560',
',,560,,,560,,560,246,,246,560,246,246,246,246,246,246,246,560,246,,',
',560,560,560,560,560,560,,,,560,560,,246,,,,,560,,,560,,,560,30,30,30',
'30,30,,,,30,30,,,,30,,30,30,30,30,30,30,30,,,,,,30,30,30,30,30,30,30',
',,30,,,,,,30,30,,30,30,30,,30,30,30,30,30,,30,30,30,,30,30,,30,30,,756',
'756,756,756,756,756,756,756,756,756,756,,756,756,,,756,756,,30,,,30',
',,30,,,30,,30,756,,756,30,756,756,756,756,756,756,756,30,756,,,,30,30',
'30,30,30,30,,,,30,30,,756,,,,,30,,,30,,,30,31,31,31,,31,,,,31,31,,,',
'31,,31,31,31,31,31,31,31,,,,,,31,31,31,31,31,31,31,,,31,,,,,,,31,,,31',
'31,,31,31,31,31,31,,31,31,31,,31,31,837,837,837,837,837,837,837,837',
'837,837,837,456,837,837,,,837,837,,,,,,31,,,31,456,456,31,,837,31,837',
'31,837,837,837,837,837,837,837,456,837,456,,456,456,456,456,,31,31,31',
'31,31,31,,,837,31,31,,334,,334,334,334,31,334,,31,,,31,32,32,32,,32',
',,,32,32,,,,32,,32,32,32,32,32,32,32,,,,,334,32,32,32,32,32,32,32,334',
',32,,,,,,,32,,,32,32,,32,32,32,32,32,,32,32,32,,32,32,751,751,751,751',
'751,751,751,751,751,751,751,457,751,751,,,751,751,,,,,,32,,,32,457,457',
'32,,751,32,751,,751,751,751,751,751,751,751,457,751,457,,457,457,457',
'457,,32,32,32,32,32,32,,,751,32,32,,,,32,,,32,,,32,,,32,564,564,564',
'564,564,,,,564,564,,,,564,,564,564,564,564,564,564,564,,,,,,564,564',
'564,564,564,564,564,,554,564,554,554,554,,554,564,564,,564,564,564,',
'564,564,564,564,564,,564,564,564,,564,564,,564,564,,,,,,,,,,554,,,,',
',,,554,,,564,,,564,,,564,,,564,,564,,,,564,,,,,,,,564,,,,,564,564,564',
'564,564,564,,,,564,564,,,,,,,564,,,564,,,564,569,569,569,569,569,,,',
'569,569,,,,569,,569,569,569,569,569,569,569,,,,,,569,569,569,569,569',
'569,569,,,569,,,,,,569,569,,569,569,569,,569,569,569,569,569,,569,569',
'569,,569,569,,569,569,,465,465,465,465,465,465,465,,,465,465,,,,,,465',
'465,,569,,,569,,,569,,,569,,569,465,,465,569,465,465,465,465,465,465',
'465,569,465,,,,569,569,569,569,569,569,,,,569,569,,,,,,,569,,,569,,',
'569,882,882,882,882,882,,,,882,882,,,,882,,882,882,882,882,882,882,882',
',,,,,882,882,882,882,882,882,882,,,882,,,,,,882,882,,882,882,882,,882',
'882,882,882,882,,882,882,882,,882,882,,882,882,,471,471,471,471,471',
'471,471,,,471,471,,,,,,471,471,,882,,,882,,,882,,,882,,882,471,,471',
'882,471,471,471,471,471,471,471,882,471,,,,882,882,882,882,882,882,',
',,882,882,,,,,,,882,,,882,,,882,880,880,880,,880,,,,880,880,,,,880,',
'880,880,880,880,880,880,880,,,,,,880,880,880,880,880,880,880,,,880,',
',,,,,880,,,880,880,,880,880,880,880,880,,880,880,880,,880,880,,880,880',
',472,472,472,472,472,472,472,472,,472,472,,,,,,472,472,,880,,,880,,',
'880,,,880,,880,472,880,472,880,472,472,472,472,472,472,472,880,472,',
',,880,880,880,880,880,880,,,,880,880,,,,,,,880,,,880,,,880,38,38,38',
',38,,,,38,38,,,,38,,38,38,38,38,38,38,38,,,,,,38,38,38,38,38,38,38,',
',38,,,,,,,38,,,38,38,,38,38,38,38,38,,38,38,38,,38,38,,38,38,,448,448',
'448,448,448,448,448,448,448,448,448,,448,448,,,448,448,,38,,,38,,,38',
',,38,,,448,,448,38,448,448,448,448,448,448,448,38,448,,,,38,38,38,38',
'38,38,,,,38,38,,,,,,,38,,,38,,,38,39,39,39,,39,,,,39,39,,,,39,,39,39',
'39,39,39,39,39,,,,,,39,39,39,39,39,39,39,,,39,,,,,,,39,,,39,39,,39,39',
'39,39,39,,39,39,39,,39,39,,39,39,,449,449,449,449,449,449,449,449,449',
'449,449,,449,449,,,449,449,,39,,,39,,,39,,,39,,,449,,449,39,449,449',
'449,449,449,449,449,39,449,,,,39,39,39,39,39,39,,,,39,39,,,,,,,39,,',
'39,,,39,40,40,40,,40,,,,40,40,,,,40,,40,40,40,40,40,40,40,,,,,,40,40',
'40,40,40,40,40,,,40,,,,,,,40,,,40,40,,40,40,40,40,40,,40,40,40,,40,40',
',40,40,,459,459,459,459,459,459,459,,,459,459,,,,,,459,459,,40,,,40',
',,40,,,40,,,459,,459,40,459,459,459,459,459,459,459,40,459,,,,40,40',
'40,40,40,40,,,,40,40,,,,,,,40,,,40,,,40,865,865,865,865,865,,,,865,865',
',,,865,,865,865,865,865,865,865,865,,,,,,865,865,865,865,865,865,865',
',,865,,,,,,865,865,,865,865,865,,865,865,865,865,865,,865,865,865,,865',
'865,,865,865,,460,,,,,,,,,,,,,,,,460,460,,865,,,865,,,865,,,865,,865',
'460,,460,865,460,460,460,460,,,460,865,460,,,,865,865,865,865,865,865',
',,,865,865,,,,,,,865,,,865,,,865,571,571,571,,571,,,,571,571,,,,571',
',571,571,571,571,571,571,571,,,,,,571,571,571,571,571,571,571,,,571',
',,,,,,571,,,571,571,,571,571,571,571,571,571,571,571,571,,571,571,,571',
'571,,464,464,464,464,464,464,464,,,464,464,,,,,,464,464,,571,,,571,',
',571,,,571,,571,464,,464,571,464,464,464,464,464,464,464,571,464,,,',
'571,571,571,571,571,571,,,,571,571,,,,,,,571,,,571,,,571,579,579,579',
',579,,,,579,579,,,,579,,579,579,579,579,579,579,579,,,,,,579,579,579',
'579,579,579,579,,,579,,,,,,,579,,,579,579,,579,579,579,579,579,579,579',
'579,579,,579,579,,579,579,,466,466,466,466,466,466,466,,,466,466,,,',
',,466,466,,579,,,579,,,579,,,579,,579,466,,466,579,466,466,466,466,466',
'466,466,579,466,,,,579,579,579,579,579,579,,,,579,579,,,,,,,579,,,579',
',,579,52,52,52,,52,,,,52,52,,,,52,,52,52,52,52,52,52,52,,,,,,52,52,52',
'52,52,52,52,,,52,,,,,,,52,,,52,52,,52,52,52,52,52,,52,52,52,,52,52,',
'52,52,,463,,,,,,,,,,,,,,,,463,463,,52,,,52,,,52,,,52,,,463,,463,52,463',
'463,463,463,,,463,52,463,,,,52,52,52,52,52,52,,,,52,52,,,,,,,52,,,52',
',,52,53,53,53,,53,,,,53,53,,,,53,,53,53,53,53,53,53,53,,,,,,53,53,53',
'53,53,53,53,,,53,,,,,,,53,,,53,53,,53,53,53,53,53,53,53,53,53,,53,53',
',53,53,,462,,,,,,,,,,,,,,,,462,462,,53,,,53,,,53,,,53,,53,462,,462,53',
'462,462,462,462,,,462,53,462,,,,53,53,53,53,53,53,,,,53,53,,,,,,,53',
',,53,,,53,54,54,54,,54,,,,54,54,,,,54,,54,54,54,54,54,54,54,,,,,,54',
'54,54,54,54,54,54,,,54,,,,,,,54,,,54,54,,54,54,54,54,54,54,54,54,54',
',54,54,,54,54,,461,,,,,,,,,,,,,,,,461,461,,54,,,54,,,54,,,54,,,461,',
'461,54,461,461,461,461,,,461,54,461,,,,54,54,54,54,54,54,,,,54,54,,',
',,,,54,,,54,,,54,583,583,583,,583,,,,583,583,,,,583,,583,583,583,583',
'583,583,583,,,,,,583,583,583,583,583,583,583,,,583,,,,,,,583,,,583,583',
',583,583,583,583,583,,583,583,583,,583,583,,583,583,,467,467,467,467',
'467,467,467,,,467,467,,,,,,467,467,,583,,,583,,,583,,,583,,,467,,467',
'583,467,467,467,467,467,467,467,583,467,,,,583,583,583,583,583,583,',
',,583,583,,,,,,,583,,,583,,,583,862,862,862,862,862,,,,862,862,,,,862',
',862,862,862,862,862,862,862,,,,,,862,862,862,862,862,862,862,,,862',
',,,,,862,862,,862,862,862,,862,862,862,862,862,,862,862,862,,862,862',
',862,862,,468,468,468,468,468,468,468,,,468,468,,,,,,468,468,,862,,',
'862,,,862,,,862,,862,468,,468,862,468,468,468,468,468,468,468,862,468',
',,,862,862,862,862,862,862,,,,862,862,,,,,,,862,,,862,,,862,57,57,57',
',57,,,,57,57,,,,57,,57,57,57,57,57,57,57,,,,,,57,57,57,57,57,57,57,',
',57,,,,,,,57,,,57,57,,57,57,57,57,57,,57,57,57,,57,57,,57,57,,,,,,,',
',,,,,,,,,,,,,57,,,57,,,57,,,57,,,,,,57,,,,,,,,57,,,,,57,57,57,57,57',
'57,,,,57,57,,,,,,,57,,,57,,,57,58,58,58,,58,,,,58,58,,,,58,,58,58,58',
'58,58,58,58,,,,,,58,58,58,58,58,58,58,,,58,,,,,,,58,,,58,58,,58,58,58',
'58,58,,58,58,58,,58,58,,58,58,,,,,,,,,,,,,,,,,,,,,58,,,58,,,58,,,58',
',,,,,58,,,,,,,,58,,,,,58,58,58,58,58,58,,,,58,58,,,,,,,58,,,58,,,58',
'61,61,61,,61,,,,61,61,,,,61,,61,61,61,61,61,61,61,,,,,,61,61,61,61,61',
'61,61,,,61,,,,,,,61,,,61,61,,61,61,61,61,61,,61,61,61,,61,61,,61,61',
',,,,,,,,,,,,,,,,,,,,61,,,61,,,61,,,61,,,,,,61,,,,,,,,61,,,,,61,61,61',
'61,61,61,,,,61,61,61,,,,,61,61,,,61,,,61,62,62,62,,62,,,,62,62,,,,62',
',62,62,62,62,62,62,62,,,,,,62,62,62,62,62,62,62,,,62,,,,,,,62,,,62,62',
',62,62,62,62,62,,62,62,62,,62,62,635,,635,635,635,,635,,,,,,,,,,,,,',
',,,62,,,62,,,62,,,62,,62,,,,635,,,,,,,,635,635,635,635,,62,62,62,62',
'62,62,635,,,62,62,,,,,,,62,,,62,,,62,63,63,63,,63,,,,63,63,,,,63,,63',
'63,63,63,63,63,63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63,,63',
'63,63,63,63,,63,63,63,,63,63,820,,820,820,820,,820,,,,,,,,,,,,,,63,',
',63,,,63,,,63,,,63,,,,,,820,,,,,,,,820,820,820,820,,63,63,63,63,63,63',
',,,63,63,,,,,,,63,,,63,,,63,502,502,502,502,502,,,,502,502,,,,502,,502',
'502,502,502,502,502,502,,,,,,502,502,502,502,502,502,502,,,502,,,,,',
'502,502,,502,502,502,,502,502,502,502,502,,502,502,502,,502,502,,502',
'502,,,,,,,,,,,,,,,,,,,,,502,,,502,,,502,,,502,,502,,,,502,,,,,,,,502',
',,,,502,502,502,502,502,502,,,,502,502,,,,,,502,502,,,502,,,502,861',
'861,861,,861,,,,861,861,,,,861,,861,861,861,861,861,861,861,,,,,,861',
'861,861,861,861,861,861,,,861,,,,,,,861,,,861,861,,861,861,861,861,861',
',861,861,861,,861,861,,861,861,,,,,,,,,,,,,,,,,,,,,861,,,861,,,861,',
',861,,861,,,,861,,,,,,,,861,,,,,861,861,861,861,861,861,,,,861,861,',
',,,,,861,,,861,,,861,585,585,585,,585,,,,585,585,,,,585,,585,585,585',
'585,585,585,585,,,,,,585,585,585,585,585,585,585,,,585,,,,,,,585,,,585',
'585,,585,585,585,585,585,,585,585,585,,585,585,,585,585,,,,,,,,,,,,',
',,,,,,,,585,,,585,,,585,,,585,,,,,,585,,,,,,,,585,,,,,585,585,585,585',
'585,585,,,,585,585,,,,,,,585,,,585,,,585,851,851,851,,851,,,,851,851',
',,,851,,851,851,851,851,851,851,851,,,,,,851,851,851,851,851,851,851',
',,851,,,,,,,851,,,851,851,,851,851,851,851,851,,851,851,851,,851,851',
'729,,729,729,729,,729,,,,,,,,,,,,,,,,,851,,,851,,,851,,,851,,,,,,729',
',,,,,,,729,729,729,729,,851,851,851,851,851,851,,,,851,851,,,,,,,851',
',,851,,,851,445,445,445,,445,,,,445,445,,,,445,,445,445,445,445,445',
'445,445,,,,,,445,445,445,445,445,445,445,,,445,,,,,,,445,,,445,445,',
'445,445,445,445,445,,445,445,445,,445,445,,445,445,,,,,,,,,,,,,,,,,',
',,,445,,,445,,,445,,,445,,,,,,445,,,,,,,,445,,,,,445,445,445,445,445',
'445,,,,445,445,,,,,,,445,,,445,,,445,83,83,83,,83,,,,83,83,,,,83,,83',
'83,83,83,83,83,83,,83,,,,83,83,83,83,83,83,83,,,83,,,,,,,83,,,83,83',
',83,83,83,83,83,83,83,83,83,,83,83,,83,83,,,,,,,,,,,,,,,,,,,,,83,,,83',
'83,,83,,,83,,83,,83,,83,,,,,,,,83,,83,,,83,83,83,83,83,83,,,,83,83,',
',,,,,83,,,83,,,83,86,86,86,,86,,,,86,86,,,,86,,86,86,86,86,86,86,86',
',86,,,,86,86,86,86,86,86,86,,,86,,,,,,,86,,,86,86,,86,86,86,86,86,86',
'86,86,86,,86,86,,86,86,,,,,,,,,,,,,,,,,,,,,86,,,86,86,,86,,,86,,86,',
'86,,86,,,,,,,,86,,86,,,86,86,86,86,86,86,,,,86,86,,,,,,,86,,,86,,,86',
'444,444,444,,444,,,,444,444,,,,444,,444,444,444,444,444,444,444,,,,',
',444,444,444,444,444,444,444,,,444,,,,,,,444,,,444,444,,444,444,444',
'444,444,,444,444,444,,444,444,,444,444,,,,,,,,,,,,,,,,,,,,,444,,,444',
',,444,,,444,,,,,,444,,,,,,,,444,,,,,444,444,444,444,444,444,,,,444,444',
',,,,,,444,,,444,,,444,98,98,98,98,98,,,,98,98,,,,98,,98,98,98,98,98',
'98,98,,,,,,98,98,98,98,98,98,98,,,98,,,,,,98,98,98,98,98,98,,98,98,98',
'98,98,,98,98,98,,98,98,,98,98,,,,,,,,,,,,,,,,,,,,,98,,,98,,,98,,,98',
',98,,,,98,,,,,,,,98,,,,,98,98,98,98,98,98,,,,98,98,,,,,,98,98,,,98,',
',98,102,102,102,,102,,,,102,102,,,,102,,102,102,102,102,102,102,102',
',,,,,102,102,102,102,102,102,102,,,102,,,,,,,102,,,102,102,,102,102',
'102,102,102,,102,102,102,,102,102,,102,102,,,,,,,,,,,,,,,,,,,,,102,',
',102,,,102,,,102,,,,,,102,,,,,,,,102,,,,,102,102,102,102,102,102,,,',
'102,102,,,,,,,102,,,102,,,102,103,103,103,,103,,,,103,103,,,,103,,103',
'103,103,103,103,103,103,,,,,,103,103,103,103,103,103,103,,,103,,,,,',
',103,,,103,103,,103,103,103,103,103,,103,103,103,,103,103,,103,103,',
',,,,,,,,,,,,,,,,,,,103,,,103,,,103,,,103,,,,,,103,,,,,,,,103,,,,,103',
'103,103,103,103,103,,,,103,103,,,,,,,103,,,103,,,103,104,104,104,,104',
',,,104,104,,,,104,,104,104,104,104,104,104,104,,,,,,104,104,104,104',
'104,104,104,,,104,,,,,,,104,,,104,104,,104,104,104,104,104,,104,104',
'104,,104,104,,104,104,,,,,,,,,,,,,,,,,,,,,104,,,104,,,104,,,104,,,,',
',104,,,,,,,,104,,,,,104,104,104,104,104,104,,,,104,104,,,,,,,104,,,104',
',,104,105,105,105,,105,,,,105,105,,,,105,,105,105,105,105,105,105,105',
',,,,,105,105,105,105,105,105,105,,,105,,,,,,,105,,,105,105,,105,105',
'105,105,105,,105,105,105,,105,105,,105,105,,,,,,,,,,,,,,,,,,,,,105,',
',105,,,105,,,105,,,,,,105,,,,,,,,105,,,,,105,105,105,105,105,105,,,',
'105,105,,,,,,,105,,,105,,,105,106,106,106,106,106,,,,106,106,,,,106',
',106,106,106,106,106,106,106,,,,,,106,106,106,106,106,106,106,,,106',
',,,,,106,106,,106,106,106,,106,106,106,106,106,,106,106,106,,106,106',
',106,106,,,,,,,,,,,,,,,,,,,,,106,,,106,,,106,,,106,,106,,,,106,,,,,',
',,106,,,,,106,106,106,106,106,106,,,,106,106,,,,,,,106,,,106,,,106,107',
'107,107,107,107,,,,107,107,,,,107,,107,107,107,107,107,107,107,,,,,',
'107,107,107,107,107,107,107,,,107,,,,,,107,107,107,107,107,107,,107',
'107,107,107,107,,107,107,107,,107,107,,107,107,,,,,,,,,,,,,,,,,,,,,107',
',,107,,,107,,,107,,107,,,,107,,,,,,,,107,,,,,107,107,107,107,107,107',
',,,107,107,,,,,,,107,,,107,,,107,847,847,847,847,847,,,,847,847,,,,847',
',847,847,847,847,847,847,847,,,,,,847,847,847,847,847,847,847,,,847',
',,,,,847,847,,847,847,847,,847,847,847,847,847,,847,847,847,,847,847',
',847,847,,,,,,,,,,,,,,,,,,,,,847,,,847,,,847,,,847,,847,,,,847,,,,,',
',,847,,,,,847,847,847,847,847,847,,,,847,847,,,,,,,847,,,847,,,847,443',
'443,443,,443,,,,443,443,,,,443,,443,443,443,443,443,443,443,,,,,,443',
'443,443,443,443,443,443,,,443,,,,,,,443,,,443,443,,443,443,443,443,443',
',443,443,443,,443,443,,443,443,,,,,,,,,,,,,,,,,,,,,443,,,443,,,443,',
',443,,,,,,443,,,,,,,,443,,,,,443,443,443,443,443,443,,,,443,443,,,,',
',,443,,,443,,,443,838,838,838,,838,,,,838,838,,,,838,,838,838,838,838',
'838,838,838,,,,,,838,838,838,838,838,838,838,,,838,,,,,,,838,,,838,838',
',838,838,838,838,838,,838,838,838,,838,838,,838,838,,,,,,,,,,,,,,,,',
',,,,838,,,838,,,838,,,838,,,,,,838,,,,,,,,838,,,,,838,838,838,838,838',
'838,,,,838,838,,,,,,,838,,,838,,,838,194,194,194,194,194,,,,194,194',
',,,194,,194,194,194,194,194,194,194,,,,,,194,194,194,194,194,194,194',
',,194,,,,,,194,194,,194,194,194,,194,194,194,194,194,,194,194,194,,194',
'194,,194,194,,,,,,,,,,,,,,,,,,,,,194,,,194,,,194,,,194,,194,,,,194,',
',,,,,,194,,,,,194,194,194,194,194,194,,,,194,194,,,,,,,194,,,194,,,194',
'195,195,195,,195,,,,195,195,,,,195,,195,195,195,195,195,195,195,,,,',
',195,195,195,195,195,195,195,,,195,,,,,,,195,,,195,195,,195,195,195',
'195,195,,195,195,195,,195,195,,195,195,,,,,,,,,,,,,,,,,,,,,195,,,195',
',,195,,,195,,195,,,,195,,,,,,,,195,,,,,195,195,195,195,195,195,,,,195',
'195,,,,,,,195,,,195,,,195,196,196,196,,196,,,,196,196,,,,196,,196,196',
'196,196,196,196,196,,,,,,196,196,196,196,196,196,196,,,196,,,,,,,196',
',,196,196,,196,196,196,196,196,,196,196,196,,196,196,,196,196,,,,,,',
',,,,,,,,,,,,,,196,,,196,,,196,,,196,,196,,,,196,,,,,,,,196,,,,,196,196',
'196,196,196,196,,,,196,196,,,,,,,196,,,196,,,196,197,197,197,,197,,',
',197,197,,,,197,,197,197,197,197,197,197,197,,,,,,197,197,197,197,197',
'197,197,,,197,,,,,,,197,,,197,197,,197,197,197,197,197,,197,197,197',
',197,197,,197,197,,,,,,,,,,,,,,,,,,,,,197,,,197,,,197,,,197,,,,,,197',
',,,,,,,197,,,,,197,197,197,197,197,197,,,,197,197,,,,,,,197,,,197,,',
'197,198,198,198,,198,,,,198,198,,,,198,,198,198,198,198,198,198,198',
',,,,,198,198,198,198,198,198,198,,,198,,,,,,,198,,,198,198,,198,198',
'198,198,198,198,198,198,198,,198,198,,198,198,,,,,,,,,,,,,,,,,,,,,198',
',,198,,,198,,,198,,198,,,,198,,,,,,,,198,,,,,198,198,198,198,198,198',
',,,198,198,,,,,,,198,,,198,,,198,441,441,441,,441,,,,441,441,,,,441',
',441,441,441,441,441,441,441,,,,,,441,441,441,441,441,441,441,,,441',
',,,,,,441,,,441,441,,441,441,441,441,441,441,441,441,441,,441,441,,441',
'441,,,,,,,,,,,,,,,,,,,,,441,,,441,,,441,,,441,,441,,,,441,,,,,,,,441',
',,,,441,441,441,441,441,441,,,,441,441,,,,,,,441,,,441,,,441,434,434',
'434,,434,,,,434,434,,,,434,,434,434,434,434,434,434,434,,,,,,434,434',
'434,434,434,434,434,,,434,,,,,,,434,,,434,434,,434,434,434,434,434,434',
'434,434,434,,434,434,,434,434,,,,,,,,,,,,,,,,,,,,,434,,,434,434,,434',
',,434,,434,,434,,434,,,,,,,,434,,,,,434,434,434,434,434,434,,,,434,434',
',,,,,,434,,,434,,,434,201,201,201,,201,,,,201,201,,,,201,,201,201,201',
'201,201,201,201,,,,,,201,201,201,201,201,201,201,,,201,,,,,,,201,,,201',
'201,,201,201,201,201,201,,201,201,201,,201,201,,201,201,,,,,,,,,,,,',
',,,,,,,,201,,,201,,,201,,,201,,,,,,201,,,,,,,,201,,,,,201,201,201,201',
'201,201,,,,201,201,,,,,,,201,,,201,,,201,202,202,202,,202,,,,202,202',
',,,202,,202,202,202,202,202,202,202,,,,,,202,202,202,202,202,202,202',
',,202,,,,,,,202,,,202,202,,202,202,202,202,202,,202,202,202,,202,202',
',202,202,,,,,,,,,,,,,,,,,,,,,202,,,202,,,202,,,202,,,,,,202,,,,,,,,202',
',,,,202,202,202,202,202,202,,,,202,202,,,,,,,202,,,202,,,202,203,203',
'203,,203,,,,203,203,,,,203,,203,203,203,203,203,203,203,,,,,,203,203',
'203,203,203,203,203,,,203,,,,,,,203,,,203,203,,203,203,203,203,203,',
'203,203,203,,203,203,,203,203,,,,,,,,,,,,,,,,,,,,,203,,,203,,,203,,',
'203,,,,,,203,,,,,,,,203,,,,,203,203,203,203,203,203,,,,203,203,,,,,',
',203,,,203,,,203,433,433,433,,433,,,,433,433,,,,433,,433,433,433,433',
'433,433,433,,,,,,433,433,433,433,433,433,433,,,433,,,,,,,433,,,433,433',
',433,433,433,433,433,433,433,433,433,,433,433,,433,433,,,,,,,,,,,,,',
',,,,,,,433,,,433,433,,433,,,433,,433,,433,,433,,,,,,,,433,,,,,433,433',
'433,433,433,433,,,,433,433,,,,,,,433,,,433,,,433,826,826,826,,826,,',
',826,826,,,,826,,826,826,826,826,826,826,826,,,,,,826,826,826,826,826',
'826,826,,,826,,,,,,,826,,,826,826,,826,826,826,826,826,,826,826,826',
',826,826,,826,826,,,,,,,,,,,,,,,,,,,,,826,,,826,,,826,,,826,,,,,,826',
',,,,,,,826,,,,,826,826,826,826,826,826,,,,826,826,,,,,,,826,,,826,,',
'826,612,612,612,,612,,,,612,612,,,,612,,612,612,612,612,612,612,612',
',,,,,612,612,612,612,612,612,612,,,612,,,,,,,612,,,612,612,,612,612',
'612,612,612,,612,612,612,,612,612,,612,612,,,,,,,,,,,,,,,,,,,,,612,',
',612,,,612,,,612,,,,,,612,,,,,,,,612,,,,,612,612,612,612,612,612,,,',
'612,612,,,,,,,612,,,612,,,612,614,614,614,,614,,,,614,614,,,,614,,614',
'614,614,614,614,614,614,,,,,,614,614,614,614,614,614,614,,,614,,,,,',
',614,,,614,614,,614,614,614,614,614,,614,614,614,,614,614,,614,614,',
',,,,,,,,,,,,,,,,,,,614,,,614,,,614,,,614,,614,,,,614,,,,,,,,614,,,,',
'614,614,614,614,614,614,,,,614,614,,,,,,,614,,,614,,,614,211,211,211',
'211,211,,,,211,211,,,,211,,211,211,211,211,211,211,211,,,,,,211,211',
'211,211,211,211,211,,,211,,,,,,211,211,,211,211,211,,211,211,211,211',
'211,,211,211,211,,211,211,,211,211,,,,,,,,,,,,,,,,,,,,,211,,,211,,,211',
',,211,,211,,,,211,,,,,,,,211,,,,,211,211,211,211,211,211,,,,211,211',
',,,,,,211,,,211,,,211,212,212,212,,212,,,,212,212,,,,212,,212,212,212',
'212,212,212,212,,,,,,212,212,212,212,212,212,212,,,212,,,,,,,212,,,212',
'212,,212,212,212,212,212,,212,212,212,,212,212,,212,212,,,,,,,,,,,,',
',,,,,,,,212,,,212,,212,212,,,212,,,,,,212,,,,,,,,212,,,,,212,212,212',
'212,212,212,,,,212,212,,,,,,,212,,,212,,,212,215,215,215,,215,,,,215',
'215,,,,215,,215,215,215,215,215,215,215,,,,,,215,215,215,215,215,215',
'215,,,215,,,,,,,215,,,215,215,,215,215,215,215,215,,215,215,215,,215',
'215,,215,215,,,,,,,,,,,,,,,,,,,,,215,,,215,,,215,,,215,,,,,,215,,,,',
',,,215,,,,,215,215,215,215,215,215,,,,215,215,,,,,,,215,,,215,,,215',
'806,806,806,806,806,,,,806,806,,,,806,,806,806,806,806,806,806,806,',
',,,,806,806,806,806,806,806,806,,,806,,,,,,806,806,,806,806,806,,806',
'806,806,806,806,,806,806,806,,806,806,,806,806,,,,,,,,,,,,,,,,,,,,,806',
',,806,,,806,,,806,,806,,,,806,,,,,,,,806,,,,,806,806,806,806,806,806',
',,,806,806,,,,,,,806,,,806,,,806,217,217,217,,217,,,,217,217,,,,217',
',217,217,217,217,217,217,217,,,,,,217,217,217,217,217,217,217,,,217',
',,,,,,217,,,217,217,,217,217,217,217,217,,217,217,217,,217,217,,217',
'217,,,,,,,,,,,,,,,,,,,,,217,,,217,,,217,,,217,,,,,,217,,,,,,,,217,,',
',,217,217,217,217,217,217,,,,217,217,,,,,,,217,,,217,,,217,218,218,218',
',218,,,,218,218,,,,218,,218,218,218,218,218,218,218,,,,,,218,218,218',
'218,218,218,218,,,218,,,,,,,218,,,218,218,,218,218,218,218,218,,218',
'218,218,,218,218,,218,218,,,,,,,,,,,,,,,,,,,,,218,,,218,,,218,,,218',
',,,,,218,,,,,,,,218,,,,,218,218,218,218,218,218,,,,218,218,,,,,,,218',
',,218,,,218,219,219,219,,219,,,,219,219,,,,219,,219,219,219,219,219',
'219,219,,,,,,219,219,219,219,219,219,219,,,219,,,,,,,219,,,219,219,',
'219,219,219,219,219,,219,219,219,,219,219,,219,219,,,,,,,,,,,,,,,,,',
',,,219,,,219,,,219,,,219,,,,,,219,,,,,,,,219,,,,,219,219,219,219,219',
'219,,,,219,219,,,,,,,219,,,219,,,219,220,220,220,,220,,,,220,220,,,',
'220,,220,220,220,220,220,220,220,,,,,,220,220,220,220,220,220,220,,',
'220,,,,,,,220,,,220,220,,220,220,220,220,220,,220,220,220,,220,220,',
'220,220,,,,,,,,,,,,,,,,,,,,,220,,,220,,,220,,,220,,,,,,220,,,,,,,,220',
',,,,220,220,220,220,220,220,,,,220,220,,,,,,,220,,,220,,,220,221,221',
'221,,221,,,,221,221,,,,221,,221,221,221,221,221,221,221,,,,,,221,221',
'221,221,221,221,221,,,221,,,,,,,221,,,221,221,,221,221,221,221,221,',
'221,221,221,,221,221,,221,221,,,,,,,,,,,,,,,,,,,,,221,,,221,,,221,,',
'221,,,,,,221,,,,,,,,221,,,,,221,221,221,221,221,221,,,,221,221,,,,,',
',221,,,221,,,221,222,222,222,,222,,,,222,222,,,,222,,222,222,222,222',
'222,222,222,,,,,,222,222,222,222,222,222,222,,,222,,,,,,,222,,,222,222',
',222,222,222,222,222,,222,222,222,,222,222,,222,222,,,,,,,,,,,,,,,,',
',,,,222,,,222,,,222,,,222,,,,,,222,,,,,,,,222,,,,,222,222,222,222,222',
'222,,,,222,222,,,,,,,222,,,222,,,222,223,223,223,,223,,,,223,223,,,',
'223,,223,223,223,223,223,223,223,,,,,,223,223,223,223,223,223,223,,',
'223,,,,,,,223,,,223,223,,223,223,223,223,223,,223,223,223,,223,223,',
'223,223,,,,,,,,,,,,,,,,,,,,,223,,,223,,,223,,,223,,,,,,223,,,,,,,,223',
',,,,223,223,223,223,223,223,,,,223,223,,,,,,,223,,,223,,,223,224,224',
'224,,224,,,,224,224,,,,224,,224,224,224,224,224,224,224,,,,,,224,224',
'224,224,224,224,224,,,224,,,,,,,224,,,224,224,,224,224,224,224,224,',
'224,224,224,,224,224,,224,224,,,,,,,,,,,,,,,,,,,,,224,,,224,,,224,,',
'224,,,,,,224,,,,,,,,224,,,,,224,224,224,224,224,224,,,,224,224,,,,,',
',224,,,224,,,224,225,225,225,,225,,,,225,225,,,,225,,225,225,225,225',
'225,225,225,,,,,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225,225',
',225,225,225,225,225,,225,225,225,,225,225,,225,225,,,,,,,,,,,,,,,,',
',,,,225,,,225,,,225,,,225,,,,,,225,,,,,,,,225,,,,,225,225,225,225,225',
'225,,,,225,225,,,,,,,225,,,225,,,225,226,226,226,,226,,,,226,226,,,',
'226,,226,226,226,226,226,226,226,,,,,,226,226,226,226,226,226,226,,',
'226,,,,,,,226,,,226,226,,226,226,226,226,226,,226,226,226,,226,226,',
'226,226,,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,,226,,,,,,226,,,,,,,,226',
',,,,226,226,226,226,226,226,,,,226,226,,,,,,,226,,,226,,,226,227,227',
'227,,227,,,,227,227,,,,227,,227,227,227,227,227,227,227,,,,,,227,227',
'227,227,227,227,227,,,227,,,,,,,227,,,227,227,,227,227,227,227,227,',
'227,227,227,,227,227,,227,227,,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,',
'227,,,,,,227,,,,,,,,227,,,,,227,227,227,227,227,227,,,,227,227,,,,,',
',227,,,227,,,227,228,228,228,,228,,,,228,228,,,,228,,228,228,228,228',
'228,228,228,,,,,,228,228,228,228,228,228,228,,,228,,,,,,,228,,,228,228',
',228,228,228,228,228,,228,228,228,,228,228,,228,228,,,,,,,,,,,,,,,,',
',,,,228,,,228,,,228,,,228,,,,,,228,,,,,,,,228,,,,,228,228,228,228,228',
'228,,,,228,228,,,,,,,228,,,228,,,228,229,229,229,,229,,,,229,229,,,',
'229,,229,229,229,229,229,229,229,,,,,,229,229,229,229,229,229,229,,',
'229,,,,,,,229,,,229,229,,229,229,229,229,229,,229,229,229,,229,229,',
'229,229,,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,,,229,,,,,,229,,,,,,,,229',
',,,,229,229,229,229,229,229,,,,229,229,,,,,,,229,,,229,,,229,230,230',
'230,,230,,,,230,230,,,,230,,230,230,230,230,230,230,230,,,,,,230,230',
'230,230,230,230,230,,,230,,,,,,,230,,,230,230,,230,230,230,230,230,',
'230,230,230,,230,230,,230,230,,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,,',
'230,,,,,,230,,,,,,,,230,,,,,230,230,230,230,230,230,,,,230,230,,,,,',
',230,,,230,,,230,231,231,231,,231,,,,231,231,,,,231,,231,231,231,231',
'231,231,231,,,,,,231,231,231,231,231,231,231,,,231,,,,,,,231,,,231,231',
',231,231,231,231,231,,231,231,231,,231,231,,231,231,,,,,,,,,,,,,,,,',
',,,,231,,,231,,,231,,,231,,,,,,231,,,,,,,,231,,,,,231,231,231,231,231',
'231,,,,231,231,,,,,,,231,,,231,,,231,232,232,232,,232,,,,232,232,,,',
'232,,232,232,232,232,232,232,232,,,,,,232,232,232,232,232,232,232,,',
'232,,,,,,,232,,,232,232,,232,232,232,232,232,,232,232,232,,232,232,',
'232,232,,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,,,232,,,,,,232,,,,,,,,232',
',,,,232,232,232,232,232,232,,,,232,232,,,,,,,232,,,232,,,232,233,233',
'233,,233,,,,233,233,,,,233,,233,233,233,233,233,233,233,,,,,,233,233',
'233,233,233,233,233,,,233,,,,,,,233,,,233,233,,233,233,233,233,233,',
'233,233,233,,233,233,,233,233,,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,,',
'233,,,,,,233,,,,,,,,233,,,,,233,233,233,233,233,233,,,,233,233,,,,,',
',233,,,233,,,233,234,234,234,,234,,,,234,234,,,,234,,234,234,234,234',
'234,234,234,,,,,,234,234,234,234,234,234,234,,,234,,,,,,,234,,,234,234',
',234,234,234,234,234,,234,234,234,,234,234,,234,234,,,,,,,,,,,,,,,,',
',,,,234,,,234,,,234,,,234,,,,,,234,,,,,,,,234,,,,,234,234,234,234,234',
'234,,,,234,234,,,,,,,234,,,234,,,234,235,235,235,,235,,,,235,235,,,',
'235,,235,235,235,235,235,235,235,,,,,,235,235,235,235,235,235,235,,',
'235,,,,,,,235,,,235,235,,235,235,235,235,235,,235,235,235,,235,235,',
'235,235,,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,,,235,,,,,,235,,,,,,,,235',
',,,,235,235,235,235,235,235,,,,235,235,,,,,,,235,,,235,,,235,236,236',
'236,,236,,,,236,236,,,,236,,236,236,236,236,236,236,236,,,,,,236,236',
'236,236,236,236,236,,,236,,,,,,,236,,,236,236,,236,236,236,236,236,',
'236,236,236,,236,236,,236,236,,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,,',
'236,,,,,,236,,,,,,,,236,,,,,236,236,236,236,236,236,,,,236,236,,,,,',
',236,,,236,,,236,237,237,237,,237,,,,237,237,,,,237,,237,237,237,237',
'237,237,237,,,,,,237,237,237,237,237,237,237,,,237,,,,,,,237,,,237,237',
',237,237,237,237,237,,237,237,237,,237,237,,237,237,,,,,,,,,,,,,,,,',
',,,,237,,,237,,,237,,,237,,,,,,237,,,,,,,,237,,,,,237,237,237,237,237',
'237,,,,237,237,,,,,,,237,,,237,,,237,238,238,238,,238,,,,238,238,,,',
'238,,238,238,238,238,238,238,238,,,,,,238,238,238,238,238,238,238,,',
'238,,,,,,,238,,,238,238,,238,238,238,238,238,,238,238,238,,238,238,',
'238,238,,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,,,238,,,,,,238,,,,,,,,238',
',,,,238,238,238,238,238,238,,,,238,238,,,,,,,238,,,238,,,238,239,239',
'239,,239,,,,239,239,,,,239,,239,239,239,239,239,239,239,,,,,,239,239',
'239,239,239,239,239,,,239,,,,,,,239,,,239,239,,239,239,239,239,239,',
'239,239,239,,239,239,,239,239,,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,',
'239,,,,,,239,,,,,,,,239,,,,,239,239,239,239,239,239,,,,239,239,,,,,',
',239,,,239,,,239,240,240,240,,240,,,,240,240,,,,240,,240,240,240,240',
'240,240,240,,,,,,240,240,240,240,240,240,240,,,240,,,,,,,240,,,240,240',
',240,240,240,240,240,,240,240,240,,240,240,,240,240,,,,,,,,,,,,,,,,',
',,,,240,,,240,,,240,,,240,,,,,,240,,,,,,,,240,,,,,240,240,240,240,240',
'240,,,,240,240,,,,,,,240,,,240,,,240,241,241,241,,241,,,,241,241,,,',
'241,,241,241,241,241,241,241,241,,,,,,241,241,241,241,241,241,241,,',
'241,,,,,,,241,,,241,241,,241,241,241,241,241,,241,241,241,,241,241,',
'241,241,,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,,,241,,,,,,241,,,,,,,,241',
',,,,241,241,241,241,241,241,,,,241,241,,,,,,,241,,,241,,,241,242,242',
'242,,242,,,,242,242,,,,242,,242,242,242,242,242,242,242,,,,,,242,242',
'242,242,242,242,242,,,242,,,,,,,242,,,242,242,,242,242,242,242,242,',
'242,242,242,,242,242,,242,242,,,,,,,,,,,,,,,,,,,,,242,,,242,,,242,,',
'242,,,,,,242,,,,,,,,242,,,,,242,242,242,242,242,242,,,,242,242,,,,,',
',242,,,242,,,242,616,616,616,,616,,,,616,616,,,,616,,616,616,616,616',
'616,616,616,,,,,,616,616,616,616,616,616,616,,,616,,,,,,,616,,,616,616',
',616,616,616,616,616,,616,616,616,,616,616,,616,616,,,,,,,,,,,,,,,,',
',,,,616,,,616,,,616,,,616,,,,,,616,,,,,,,,616,,,,,616,616,616,616,616',
'616,,,,616,616,,,,,,,616,,,616,,,616,805,805,805,805,805,,,,805,805',
',,,805,,805,805,805,805,805,805,805,,,,,,805,805,805,805,805,805,805',
',,805,,,,,,805,805,,805,805,805,,805,805,805,805,805,,805,805,805,,805',
'805,,805,805,,,,,,,,,,,,,,,,,,,,,805,,,805,,,805,,,805,,805,,,,805,',
',,,,,,805,,,,,805,805,805,805,805,805,,,,805,805,,,,,,,805,,,805,,,805',
'803,803,803,,803,,,,803,803,,,,803,,803,803,803,803,803,803,803,,,,',
',803,803,803,803,803,803,803,,,803,,,,,,,803,,,803,803,,803,803,803',
'803,803,,803,803,803,,803,803,,803,803,,,,,,,,,,,,,,,,,,,,,803,,,803',
',,803,,,803,,,,,,803,,,,,,,,803,,,,,803,803,803,803,803,803,,,,803,803',
',,,,,,803,,,803,,,803,251,251,251,,251,,,,251,251,,,,251,,251,251,251',
'251,251,251,251,,,,,,251,251,251,251,251,251,251,,,251,,,,,,,251,,,251',
'251,,251,251,251,251,251,,251,251,251,,251,251,,251,251,,,,,,,,,,,,',
',,,,,,,,251,,,251,,,251,,,251,,,,,,251,,,,,,,,251,,,,,251,251,251,251',
'251,251,,,,251,251,,,,,,,251,,,251,,,251,617,617,617,,617,,,,617,617',
',,,617,,617,617,617,617,617,617,617,,,,,,617,617,617,617,617,617,617',
',,617,,,,,,,617,,,617,617,,617,617,617,617,617,,617,617,617,,617,617',
',617,617,,,,,,,,,,,,,,,,,,,,,617,,,617,,,617,,,617,,,,,,617,,,,,,,,617',
',,,,617,617,617,617,617,617,,,,617,617,,,,,,,617,,,617,,,617,253,253',
'253,,253,,,,253,253,,,,253,,253,253,253,253,253,253,253,,,,,,253,253',
'253,253,253,253,253,,,253,,,,,,,253,,,253,253,,253,253,253,253,253,',
'253,253,253,,253,253,,253,253,,,,,,,,,,,,,,,,,,,,,253,,,253,,,253,,',
'253,,,,,,253,,,,,,,,253,,,,,253,253,253,253,253,253,,,,253,253,,,,,',
',253,,,253,,,253,258,258,258,,258,,,,258,258,,,,258,,258,258,258,258',
'258,258,258,,,,,,258,258,258,258,258,258,258,,,258,,,,,,,258,,,258,258',
',258,258,258,258,258,,258,258,258,,258,258,,258,258,,,,,,,,,,,,,,,,',
',,,,258,,,258,,,258,,,258,,,,,,258,,,,,,,,258,,,,,258,258,258,258,258',
'258,,,,258,258,,,,,,,258,,,258,,,258,622,622,622,,622,,,,622,622,,,',
'622,,622,622,622,622,622,622,622,,,,,,622,622,622,622,622,622,622,,',
'622,,,,,,,622,,,622,622,,622,622,622,622,622,,622,622,622,,622,622,',
'622,622,,,,,,,,,,,,,,,,,,,,,622,,,622,,,622,,,622,,,,,,622,,,,,,,,622',
',,,,622,622,622,622,622,622,,,,622,622,,,,,,,622,,,622,,,622,625,625',
'625,,625,,,,625,625,,,,625,,625,625,625,625,625,625,625,,,,,,625,625',
'625,625,625,625,625,,,625,,,,,,,625,,,625,625,,625,625,625,625,625,',
'625,625,625,,625,625,,625,625,,,,,,,,,,,,,,,,,,,,,625,,,625,,,625,,',
'625,,,,,,625,,,,,,,,625,,,,,625,625,625,625,625,625,,,,625,625,,,,,',
',625,,,625,,,625,784,784,784,784,784,,,,784,784,,,,784,,784,784,784',
'784,784,784,784,,,,,,784,784,784,784,784,784,784,,,784,,,,,,784,784',
',784,784,784,,784,784,784,784,784,,784,784,784,,784,784,,784,784,,,',
',,,,,,,,,,,,,,,,,784,,,784,,,784,,,784,,784,,,,784,,,,,,,,784,,,,,784',
'784,784,784,784,784,,,,784,784,,,,,,,784,,,784,,,784,264,264,264,,264',
',,,264,264,,,,264,,264,264,264,264,264,264,264,,,,,,264,264,264,264',
'264,264,264,,,264,,,,,,,264,,,264,264,,264,264,264,264,264,264,264,264',
'264,,264,264,,264,264,,,,,,,,,,,,,,,,,,,,,264,,,264,,,264,,,264,,264',
',264,,264,,,,,,,,264,,,,,264,264,264,264,264,264,,,,264,264,,,,,,,264',
',,264,,,264,265,265,265,,265,,,,265,265,,,,265,,265,265,265,265,265',
'265,265,,,,,,265,265,265,265,265,265,265,,,265,,,,,,,265,,,265,265,',
'265,265,265,265,265,265,265,265,265,,265,265,,265,265,,,,,,,,,,,,,,',
',,,,,,265,,,265,,,265,,,265,,265,,265,,265,,,,,,,,265,,,,,265,265,265',
'265,265,265,,,,265,265,,,,,,,265,,,265,,,265,273,273,273,,273,,,,273',
'273,,,,273,,273,273,273,273,273,273,273,,,,,,273,273,273,273,273,273',
'273,,,273,,,,,,,273,,,273,273,,273,273,273,273,273,273,273,273,273,',
'273,273,,273,273,,,,,,,,,,,,,,,,,,,,,273,,,273,,273,273,,,273,,273,',
'273,,273,,,,,,,,273,,,,,273,273,273,273,273,273,,,,273,273,,,,,,,273',
',,273,,,273,415,415,415,,415,,,,415,415,,,,415,,415,415,415,415,415',
'415,415,,,,,,415,415,415,415,415,415,415,,,415,,,,,,,415,,,415,415,',
'415,415,415,415,415,,415,415,415,,415,415,,415,415,,,,,,,,,,,,,,,,,',
',,,415,,,415,,,415,,,415,,,,,,415,,,,,,,,415,,,,,415,415,415,415,415',
'415,,,,415,415,,,,,,,415,,,415,,,415,774,774,774,,774,,,,774,774,,,',
'774,,774,774,774,774,774,774,774,,,,,,774,774,774,774,774,774,774,,',
'774,,,,,,,774,,,774,774,,774,774,774,774,774,,774,774,774,,774,774,',
'774,774,,,,,,,,,,,,,,,,,,,,,774,,,774,,,774,,,774,,774,,,,774,,,,,,',
',774,,,,,774,774,774,774,774,774,,,,774,774,,,,,,,774,,,774,,,774,277',
'277,277,277,277,,,,277,277,,,,277,,277,277,277,277,277,277,277,,,,,',
'277,277,277,277,277,277,277,,,277,,,,,,277,277,,277,277,277,,277,277',
'277,277,277,,277,277,277,,277,277,,277,277,,,,,,,,,,,,,,,,,,,,,277,',
',277,,,277,,,277,,277,,,,277,,,,,,,,277,,,,,277,277,277,277,277,277',
',,,277,277,,,,,,,277,,,277,,,277,759,759,759,,759,,,,759,759,,,,759',
',759,759,759,759,759,759,759,,,,,,759,759,759,759,759,759,759,,,759',
',,,,,,759,,,759,759,,759,759,759,759,759,,759,759,759,,759,759,,759',
'759,,,,,,,,,,,,,,,,,,,,,759,,,759,,,759,,,759,,,,,,759,,,,,,,,759,,',
',,759,759,759,759,759,759,,,,759,759,,,,,,,759,,,759,,,759,758,758,758',
',758,,,,758,758,,,,758,,758,758,758,758,758,758,758,,,,,,758,758,758',
'758,758,758,758,,,758,,,,,,,758,,,758,758,,758,758,758,758,758,,758',
'758,758,,758,758,,758,758,,,,,,,,,,,,,,,,,,,,,758,,,758,,,758,,,758',
',,,,,758,,,,,,,,758,,,,,758,758,758,758,758,758,,,,758,758,,,,,,,758',
',,758,,,758,757,757,757,,757,,,,757,757,,,,757,,757,757,757,757,757',
'757,757,,,,,,757,757,757,757,757,757,757,,,757,,,,,,,757,,,757,757,',
'757,757,757,757,757,,757,757,757,,757,757,,757,757,,,,,,,,,,,,,,,,,',
',,,757,,,757,,,757,,,757,,,,,,757,,,,,,,,757,,,,,757,757,757,757,757',
'757,,,,757,757,,,,,,,757,,,757,,,757,281,281,281,,281,,,,281,281,,,',
'281,,281,281,281,281,281,281,281,,,,,,281,281,281,281,281,281,281,,',
'281,,,,,,,281,,,281,281,,281,281,281,281,281,,281,281,281,,281,281,318',
',318,318,318,,318,,,,,,,,,,,,,,,,,281,,,281,,,281,,,281,,,,,,318,,318',
',,,,,318,318,318,318,,281,281,281,281,281,281,,,,281,281,,,,281,,,281',
',,281,,,281,282,282,282,282,282,,,,282,282,,,,282,,282,282,282,282,282',
'282,282,,,,,,282,282,282,282,282,282,282,,,282,,,,,,282,282,,282,282',
'282,,282,282,282,282,282,,282,282,282,,282,282,,282,282,,,,,,,,,,,,',
',,,,,,,,282,,,282,,,282,,,282,,282,,,,282,,,,,,,,282,,,,,282,282,282',
'282,282,282,,,,282,282,,,,,,,282,,,282,,,282,633,633,633,,633,,,,633',
'633,,,,633,,633,633,633,633,633,633,633,,,,,,633,633,633,633,633,633',
'633,,,633,,,,,,,633,,,633,633,,633,633,633,633,633,,633,633,633,,633',
'633,,633,633,,,,,,,,,,,,,,,,,,,,,633,,,633,,,633,,,633,,,,,,633,,,,',
',,,633,,,,,633,633,633,633,633,633,,,,633,633,,,,,,,633,,,633,,,633',
'377,377,377,,377,,,,377,377,,,,377,,377,377,377,377,377,377,377,,,,',
',377,377,377,377,377,377,377,,,377,,,,,,,377,,,377,377,,377,377,377',
'377,377,,377,377,377,,377,377,,377,377,,,,,,,,,,,,,,,,,,,,,377,,,377',
',,377,,,377,,,,,,377,,,,,,,,377,,,,,377,377,377,377,377,377,,,,377,377',
',,,,,,377,,,377,,,377,637,637,637,637,637,,,,637,637,,,,637,,637,637',
'637,637,637,637,637,,,,,,637,637,637,637,637,637,637,,,637,,,,,,637',
'637,,637,637,637,,637,637,637,637,637,,637,637,637,,637,637,,637,637',
',,,,,,,,,,,,,,,,,,,,637,,,637,,,637,,,637,,637,,,,637,,,,,,,,637,,,',
',637,637,637,637,637,637,,,,637,637,,,,,,,637,,,637,,,637,641,641,641',
',641,,,,641,641,,,,641,,641,641,641,641,641,641,641,,,,,,641,641,641',
'641,641,641,641,,,641,,,,,,,641,,,641,641,,641,641,641,641,641,,641',
'641,641,,641,641,,641,641,,,,,,,,,,,,,,,,,,,,,641,,,641,,,641,,,641',
',,,,,641,,,,,,,,641,,,,,641,641,641,641,641,641,,,,641,641,,,,,,,641',
',,641,,,641,648,648,648,648,648,,,,648,648,,,,648,,648,648,648,648,648',
'648,648,,,,,,648,648,648,648,648,648,648,,,648,,,,,,648,648,,648,648',
'648,,648,648,648,648,648,,648,648,648,,648,648,,648,648,,,,,,,,,,,,',
',,,,,,,,648,,,648,,,648,,,648,,648,,,,648,,,,,,,,648,,,,,648,648,648',
'648,648,648,,,,648,648,,,,,,,648,,,648,,,648,654,654,654,,654,,,,654',
'654,,,,654,,654,654,654,654,654,654,654,,,,,,654,654,654,654,654,654',
'654,,,654,,,,,,,654,,,654,654,,654,654,654,654,654,654,654,654,654,',
'654,654,,654,654,,,,,,,,,,,,,,,,,,,,,654,,,654,,,654,,,654,,654,,654',
',654,,,,,,,,654,,,,,654,654,654,654,654,654,,,,654,654,,,,,,,654,,,654',
',,654,660,660,660,660,660,,,,660,660,,,,660,,660,660,660,660,660,660',
'660,,,,,,660,660,660,660,660,660,660,,,660,,,,,,660,660,,660,660,660',
',660,660,660,660,660,,660,660,660,,660,660,,660,660,,,,,,,,,,,,,,,,',
',,,,660,,,660,,,660,,,660,,660,,,,660,,,,,,,,660,,,,,660,660,660,660',
'660,660,,,,660,660,,,,,,,660,,,660,,,660,747,747,747,,747,,,,747,747',
',,,747,,747,747,747,747,747,747,747,,,,,,747,747,747,747,747,747,747',
',,747,,,,,,,747,,,747,747,,747,747,747,747,747,,747,747,747,,747,747',
',747,747,,,,,,,,,,,,,,,,,,,,,747,,,747,,,747,,,747,,,,,,747,,,,,,,,747',
',,,,747,747,747,747,747,747,,,,747,747,,,,,,,747,,,747,,,747,294,294',
'294,,294,,,,294,294,,,,294,,294,294,294,294,294,294,294,,,,,,294,294',
'294,294,294,294,294,,,294,,,,,,,294,,,294,294,,294,294,294,294,294,',
'294,294,294,,294,294,547,,547,547,547,,547,,,,,,,,,,,,,,,,,294,,,294',
',,294,,,294,,,,,,547,,,,,,,,547,547,547,547,,294,294,294,294,294,294',
',,,294,294,,,,,,,294,,,294,,,294,746,746,746,,746,,,,746,746,,,,746',
',746,746,746,746,746,746,746,,,,,,746,746,746,746,746,746,746,,,746',
',,,,,,746,,,746,746,,746,746,746,746,746,,746,746,746,,746,746,,746',
'746,,,,,,,,,,,,,,,,,,,,,746,,,746,,,746,,,746,,,,,,746,,,,,,,,746,,',
',,746,746,746,746,746,746,,,,746,746,,,,,,,746,,,746,,,746,365,365,365',
',365,,,,365,365,,,,365,,365,365,365,365,365,365,365,,,,,,365,365,365',
'365,365,365,365,,,365,,,,,,,365,,,365,365,,365,365,365,365,365,,365',
'365,365,,365,365,587,,587,587,587,,587,,,,,,,,,,,,,,,,,365,,,365,,,365',
',,365,,,,,,587,587,,,,,,,587,587,587,587,,365,365,365,365,365,365,,',
',365,365,,,,,,,365,,,365,,,365,740,740,740,740,740,,,,740,740,,,,740',
',740,740,740,740,740,740,740,,,,,,740,740,740,740,740,740,740,,,740',
',,,,,740,740,,740,740,740,,740,740,740,740,740,,740,740,740,,740,740',
',740,740,,,,,,,,,,,,,,,,,,,,,740,,,740,,,740,,,740,,740,,,,740,,,,,',
',,740,,,,,740,740,740,740,740,740,,,,740,740,,,,,,,740,,,740,,,740,661',
'661,661,661,661,,,,661,661,,,,661,,661,661,661,661,661,661,661,,,,,',
'661,661,661,661,661,661,661,,,661,,,,,,661,661,,661,661,661,,661,661',
'661,661,661,,661,661,661,,661,661,,661,661,,,,,,,,,,,,,,,,,,,,,661,',
',661,,,661,,,661,,661,,,,661,,,,,,,,661,,,,,661,661,661,661,661,661',
',,,661,661,,,,,,,661,,,661,,,661,665,665,665,,665,,,,665,665,,,,665',
',665,665,665,665,665,665,665,,,,,,665,665,665,665,665,665,665,,,665',
',,,,,,665,,,665,665,,665,665,665,665,665,,665,665,665,,665,665,876,',
'876,876,876,,876,,,,,,,,,,,,,,,,,665,,,665,,,665,,,665,,,,,,876,876',
',,,,,,876,876,876,876,,665,665,665,665,665,665,,,,665,665,,,,,,,665',
',,665,,,665,303,303,303,,303,,,,303,303,,,,303,,303,303,303,303,303',
'303,303,,,,,,303,303,303,303,303,303,303,,,303,,,,,,,303,,,303,303,',
'303,303,303,303,303,,303,303,303,,303,303,,303,303,,,,,,,,,,,,,,,,,',
',,,303,,,303,303,,303,,,303,,,,,,303,,,,,,,,303,,,,,303,303,303,303',
'303,303,,,,303,303,,,,,,,303,,,303,,,303,305,305,305,305,305,,,,305',
'305,,,,305,,305,305,305,305,305,305,305,,,,,,305,305,305,305,305,305',
'305,,,305,,,,,,305,305,,305,305,305,,305,305,305,305,305,,305,305,305',
',305,305,,305,305,,,,,,,,,,,,,,,,,,,,,305,,,305,,,305,,,305,,305,,,',
'305,,,,,,,,305,,,,,305,305,305,305,305,305,,,,305,305,,,,,,,305,,,305',
',,305,346,346,346,,346,,,,346,346,,,,346,,346,346,346,346,346,346,346',
',,,,,346,346,346,346,346,346,346,,,346,,,,,,,346,,,346,346,,346,346',
'346,346,346,,346,346,346,,346,346,,346,346,,,,,,,,,,,,,,,,,,,,,346,',
',346,,,346,,,346,,,,,,346,,,,,,,,346,,,,,346,346,346,346,346,346,,,',
'346,346,,,,,,,346,,,346,,,346,728,728,728,728,728,,,,728,728,,,,728',
',728,728,728,728,728,728,728,,,,,,728,728,728,728,728,728,728,,,728',
',,,,,728,728,,728,728,728,,728,728,728,728,728,,728,728,728,,728,728',
',728,728,,,,,,,,,,,,,,,,,,,,,728,,,728,,,728,,,728,,728,,,,728,,,,,',
',,728,,,,,728,728,728,728,728,728,,,,728,728,,,,,,,728,,,728,,,728,727',
'727,727,727,727,,,,727,727,,,,727,,727,727,727,727,727,727,727,,,,,',
'727,727,727,727,727,727,727,,,727,,,,,,727,727,,727,727,727,,727,727',
'727,727,727,,727,727,727,,727,727,,727,727,,,,,,,,,,,,,,,,,,,,,727,',
',727,,,727,,,727,,727,,,,727,,,,,,,,727,,,,,727,727,727,727,727,727',
',,,727,727,,,,,,,727,,,727,,,727,345,345,345,,345,,,,345,345,,,,345',
',345,345,345,345,345,345,345,,,,,,345,345,345,345,345,345,345,,,345',
',,,,,,345,,,345,345,,345,345,345,345,345,,345,345,345,,345,345,,345',
'345,,,,,,,,,,,,,,,,,,,,,345,,,345,,,345,,,345,,,,,,345,,,,,,,,345,,',
',,345,345,345,345,345,345,,,,345,345,,,,,,,345,,,345,,,345,723,723,723',
'723,723,,,,723,723,,,,723,,723,723,723,723,723,723,723,,,,,,723,723',
'723,723,723,723,723,,,723,,,,,,723,723,,723,723,723,,723,723,723,723',
'723,,723,723,723,,723,723,,723,723,,,,,,,,,,,,,,,,,,,,,723,,,723,,,723',
',,723,,723,,,,723,,,,,,,,723,,,,,723,723,723,723,723,723,,,,723,723',
',,,,,,723,,,723,,,723,712,712,712,,712,,,,712,712,,,,712,,712,712,712',
'712,712,712,712,,,,,,712,712,712,712,712,712,712,,,712,,,,,,,712,,,712',
'712,,712,712,712,712,712,,712,712,712,,712,712,,712,712,,,,,,,,,,,,',
',,,,,,,,712,,,712,,,712,,,712,,712,,,,712,,,,,,,,712,,,,,712,712,712',
'712,712,712,,,,712,712,,,,,,,712,,,712,,,712,718,718,718,,718,,,,718',
'718,,,,718,,718,718,718,718,718,718,718,,,,,,718,718,718,718,718,718',
'718,,,718,,,,,,,718,,,718,718,,718,718,718,718,718,,718,718,718,,718',
'718,,718,718,,,,,,,,,,,,,,,,,,,,,718,,,718,,,718,,,718,,,,,,718,,,,',
',,,718,,,,,718,718,718,718,718,718,,,,718,718,,,,,,,718,,,718,,,718',
'675,675,675,,675,,,,675,675,,,,675,,675,675,675,675,675,675,675,,,,',
',675,675,675,675,675,675,675,,,675,,,,,,,675,,,675,675,,675,675,675',
'675,675,,675,675,675,,675,675,56,,56,56,56,,56,,,,,,,,,,,,,,,,,675,',
',675,,,675,,,675,,,,,,56,56,,,,,,,56,56,56,56,,675,675,675,675,675,675',
',,,675,675,,,,,,,675,,,675,,,675,681,681,681,,681,,,,681,681,,,,681',
',681,681,681,681,681,681,681,,,,,,681,681,681,681,681,681,681,,,681',
',,,,,,681,,,681,681,,681,681,681,681,681,,681,681,681,,681,681,,681',
'681,,,,,,,,,,,,,,,,,,,,,681,,,681,,,681,,,681,,681,,,,681,,,,,,,,681',
',,,,681,681,681,681,681,681,,,,681,681,,,,,,,681,,,681,,,681,508,508',
'508,,508,,,,508,508,,,,508,,508,508,508,508,508,508,508,,,,,,508,508',
'508,508,508,508,508,,,508,,,,,,,508,,,508,508,,508,508,508,508,508,',
'508,508,508,,508,508,,,,,,,,,,,,,,,,,,,,,,,,508,,,508,,,508,,,508,,',
',,,,,,,,,,,,,,,,508,508,508,508,508,508,,,,508,508,,,,,,,508,,,508,',
',508,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,7,7,7,,7,,,,,,,,,7,7,,7,7,7,7,7,7,7,',
',7,7,,,,7,7,7,7,,,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,',
',,7,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409',
'409,409,409,409,409,409,409,409,,,,409,409,409,409,409,409,409,409,409',
'409,409,409,409,409,409,409,409,409,409,409,409,,409,409,,,409,,,,,',
',,,409,409,,409,409,409,409,409,409,409,,,409,409,,,,409,409,409,409',
',,,,,,,,,,,,409,409,,409,409,409,409,409,409,409,409,409,409,409,,,409',
'409,,,,,,,,,,409,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,8,8,,,8,,,,,,,,,8,8,,8,8',
'8,8,8,8,8,,,8,8,,,,8,8,8,8,,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8,8,8,,',
'8,8,,,,,,,,,,8,405,405,405,405,405,405,405,405,405,405,405,405,405,405',
'405,405,405,405,405,405,405,405,405,405,,,,405,405,405,405,405,405,405',
'405,405,405,405,405,405,405,405,405,405,405,405,405,405,,405,405,,,405',
',,,,,,,,405,405,,405,405,405,405,405,405,405,,,405,405,,,,405,405,405',
'405,,,,,,,,,,,,,405,405,,405,405,405,405,405,405,405,405,405,405,405',
',,405,405,,,,,,,,,,405,737,737,737,737,737,737,737,737,737,737,737,737',
'737,737,737,737,737,737,737,737,737,737,737,737,,,,737,737,737,737,737',
'737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,737,,737',
'737,,,737,,,,,,,,,737,737,,737,737,737,737,737,737,737,,,737,737,,,',
'737,737,737,737,,,,,,,,,,,,,737,737,,737,737,737,737,737,737,737,737',
'737,737,737,,,737,191,191,191,191,191,191,191,191,191,191,191,191,191',
'191,191,191,191,191,191,191,191,191,191,191,,,,191,191,191,191,191,191',
'191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,,191,191',
'191,191,191,,191,,,,,,,191,191,,191,191,191,191,191,191,191,,,191,191',
',,,191,191,191,191,,,,,,,,,,,,,191,191,,191,191,191,191,191,191,191',
'191,191,191,191,,,191,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,79,,,,79,79,79,79,79,79,79,79,79,79,79,79,79,79',
'79,79,79,79,79,79,79,,79,79,79,79,79,,79,,,,,,,79,79,,79,79,79,79,79',
'79,79,,,79,79,,,,79,79,79,79,,,,,,,,,,,,,79,79,,79,79,79,79,79,79,79',
'79,79,79,79,,,79,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,65,,,,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65',
'65,65,65,65,65,65,,65,65,65,65,65,,65,,,,,,,65,65,,65,65,65,65,65,65',
'65,,,65,65,,,,65,65,65,65,,,,,,65,,,,,,,65,65,,65,65,65,65,65,65,65',
'65,65,65,65,262,262,65,,262,,,,,,,,,262,262,,262,262,262,262,262,262',
'262,,,262,262,,,,262,262,262,262,,,,,,,,,,,,,262,262,,262,262,262,262',
'262,262,262,262,262,262,262,261,261,262,,261,,,,,,,,,261,261,,261,261',
'261,261,261,261,261,,,261,261,,,,261,261,261,261,,,,,,,,,,,,,261,261',
',261,261,261,261,261,261,261,261,261,261,261,522,522,261,,522,,,,,,',
',,522,522,,522,522,522,522,522,522,522,,,522,522,,,,522,522,522,522',
',,,,,522,,,,,,,522,522,,522,522,522,522,522,522,522,522,522,522,522',
'793,793,522,,793,,,,,,,,,793,793,,793,793,793,793,793,793,793,,,793',
'793,,,,793,793,793,793,,,,,,,,,,,,,793,793,,793,793,793,793,793,793',
'793,793,793,793,793,523,523,793,,523,,,,,,,,,523,523,,523,523,523,523',
'523,523,523,,,523,523,,,,523,523,523,523,,,,,,,,,,,,,523,523,,523,523',
'523,523,523,523,523,523,523,523,523,652,652,523,,652,,,,,,,,,652,652',
',652,652,652,652,652,652,652,,,652,652,,,,652,652,652,652,,,,,,,,,,',
',,652,652,,652,652,652,652,652,652,652,652,652,652,652,904,904,652,',
'904,,,,,,,,,904,904,,904,904,904,904,904,904,904,,,904,904,,,,904,904',
'904,904,,,,,,904,,,,,,,904,904,,904,904,904,904,904,904,904,904,904',
'904,904,905,905,904,,905,,,,,,,,,905,905,,905,905,905,905,905,905,905',
',,905,905,,,,905,905,905,905,,,,,,,,,,,,,905,905,,905,905,905,905,905',
'905,905,905,905,905,905,572,572,905,,572,,,,,,,,,572,572,,572,572,572',
'572,572,572,572,,,572,572,,,,572,572,572,572,,,,,,572,,,,,,,572,572',
',572,572,572,572,572,572,572,572,572,572,572,200,200,572,,200,,,,,,',
',,200,200,,200,200,200,200,200,200,200,,,200,200,,,,200,200,200,200',
',,,,,,,,,,,,200,200,,200,200,200,200,200,200,200,200,200,200,200,573',
'573,200,,573,,,,,,,,,573,573,,573,573,573,573,573,573,573,,,573,573',
',,,573,573,573,573,,,,,,,,,,,,,573,573,,573,573,573,573,573,573,573',
'573,573,573,573,439,439,573,,439,,,,,,,,,439,439,,439,439,439,439,439',
'439,439,,,439,439,,,,439,439,439,439,,,,,,439,,,,,,,439,439,,439,439',
'439,439,439,439,439,439,439,439,439,440,440,439,,440,,,,,,,,,440,440',
',440,440,440,440,440,440,440,,,440,440,,,,440,440,440,440,,,,,,,,,,',
',,440,440,,440,440,440,440,440,440,440,440,440,440,440,199,199,440,',
'199,,,,,,,,,199,199,,199,199,199,199,199,199,199,,,199,199,,,,199,199',
'199,199,,,,,,199,,,,,,,199,199,,199,199,199,199,199,199,199,199,199',
'199,199,512,512,199,,512,,,,,,,,,512,512,,512,512,512,512,512,512,512',
',,512,512,,,,512,512,512,512,,,,,,,,,,,,,512,512,,512,512,512,512,512',
'512,512,512,512,512,512,578,578,512,,578,,,,,,,,,578,578,,578,578,578',
'578,578,578,578,,,578,578,,,,578,578,578,578,,,,,,,,,,,,,578,578,,578',
'578,578,578,578,578,578,578,578,578,578,580,580,578,,580,,,,,,,,,580',
'580,,580,580,580,580,580,580,580,,,580,580,,,,580,580,580,580,,,,,,580',
',,,,,,580,580,,580,580,580,580,580,580,580,580,580,580,580,511,511,580',
',511,,,,,,,,,511,511,,511,511,511,511,511,511,511,,,511,511,,,,511,511',
'511,511,,,,,,511,,,,,,,511,511,,511,511,511,511,511,511,511,511,511',
'511,511,653,653,511,,653,,,,,,,,,653,653,,653,653,653,653,653,653,653',
',,653,653,,,,653,653,653,653,,,,,,,,,,,,,653,653,,653,653,653,653,653',
'653,653,653,653,653,653,,,653' ]
        racc_action_check = arr = ::Array.new(23432, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1615,   nil,  1043,   nil,  1615,  1482, 21350, 21596,  1446,
  1419,  1409,  1454,   178,  1080,   396,   nil,  1902,  2038,  2990,
  1464,   nil,  2446,  2582,  2718,   264,   -11,   950,   814,   nil,
  3398,  3534,  3670,   nil,  1356,   808,  1414,   527,  4350,  4486,
  4622,  -102,  1357,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
  1086,   nil,  5166,  5302,  5438,   -15, 20954,  5846,  5982,   nil,
   nil,  6118,  6254,  6390,   nil, 22178,   nil,   nil,   nil,   nil,
   nil,   230,   nil,   nil,   nil,   nil,   nil,  1299,  1279, 22066,
   nil,   nil,   nil,  7206,   nil,   nil,  7342,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,  1405,   nil,  7614,   nil,
   nil,   nil,  7750,  7886,  8022,  8158,  8294,  8430,   nil,  1393,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil, 21954,  1254,   nil,  8974,  9110,  9246,  9382,  9518, 23018,
 22778,  9926, 10062, 10198,   nil,  1538,   191,  1287,   365,  1137,
  1182, 10878, 11014,   nil,   nil, 11150,  1178, 11422, 11558, 11694,
 11830, 11966, 12102, 12238, 12374, 12510, 12646, 12782, 12918, 13054,
 13190, 13326, 13462, 13598, 13734, 13870, 14006, 14142, 14278, 14414,
 14550, 14686, 14822,   nil,   nil,   nil,  3262,   nil,  1138,  1118,
   nil, 15366,  1118, 15638,   nil,   nil,   nil,   nil, 15774,   nil,
   nil, 22298, 22238,  1083, 16318, 16454,   nil,   nil,   nil,   nil,
   nil,   nil,   nil, 16590,   771,  1751,   980, 16998,   972,   956,
   915, 17542, 17678,  1674,  1672,   961,  1608,   923,   885,   205,
   nil,   910,   641,   nil, 18902,   nil,   944,   911,   888,   656,
   nil,   868,   nil, 19718,   nil, 19854,    55,   nil,   733,   -59,
   239,   713,   663,   325,   680,   nil,   nil,    -4, 17554,   nil,
   nil,   nil,   600,   587,   nil,   555,   458,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,  3609,   nil,   nil,   nil,   325,   nil,
   nil,   287,   688,   233,   243, 20398, 19990,  1332,    25,    30,
   -17,   272,    48,    53,    16,   nil,   nil,   -14,  1385,   nil,
  1346,   nil,   214,   nil,   nil, 19174,   418,   384,   520,   333,
   255,   409,   232,   176,   nil,   318,   nil, 17950,   nil,   542,
   nil,   270,   nil,   234,   519,   678,   nil,   622,   -34,   nil,
   406,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   698, 21719,   nil,   nil,   nil, 21473,
   707,   nil,   nil,  1630,   nil, 16726,   714,   nil,   746,   nil,
   nil,  2854,   902,  1298,  1216,  1222,   nil,   nil,   nil,   406,
   980,   134,   nil, 10334,  9790,   nil,  2582,   nil,   nil, 22898,
 22958,  9654,   179,  8702,  7478,  7070,   311,   nil,  4350,  4486,
  1676,  1540,  1066,  1085,  1140,  1154,  3541,  3677,  3133,  4622,
  4758,  5438,  5302,  5166,  4894,  3942,  5030,  5574,  5710,  2112,
  2384,  4078,  4214,  1902,   125,   nil,  1086,   nil,   950,   nil,
   814,   nil,   nil,  1358,   nil,   nil,  1494,   -38,   nil,  1377,
  1353,   -17,  1390,  1495,   nil,   nil,   270,   -27,   -10,  1535,
   nil,   nil,  6526,  1523,  1477,   nil,   nil,  1432, 21214,  1447,
   134, 23258, 23078,  1633,  1409,   nil,   nil,  1359,   nil,   406,
   542,   678, 22358, 22478,  2718,  1222,  1459,  1430,  1346,   nil,
   nil,  1494,   nil,   nil,  2174,   nil,   nil,   nil,   nil,  2854,
  2990,  1313,   nil,  2068,   nil,   nil,  3126, 18914,   nil,   739,
   nil,   nil,  1272,   nil,  3792,   nil,  1207,  2568,   nil,   nil,
  3262,  1309,   nil,   nil,  3806,   253,   408,  1303,  1269,  3942,
   nil,  4894, 22718, 22838,   -18,   nil,  1591,   nil, 23138,  5030,
 23198,   nil,   nil,  5574,   -24,  6798,   nil, 19186,   nil,   nil,
   nil,    36,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   -35,   nil,   nil,   nil,  1001,   nil,   nil,   nil,
   nil,   nil, 10606,   869, 10742,  1299, 14958, 15502,   853,   nil,
   nil,   nil, 15910,   768,   nil, 16046,   412,    -4,   542,   678,
   677,  1766,   nil, 17814,   nil,  6266,   nil, 18086,   511,   nil,
   384, 18222,   nil,   nil,   nil,   nil,   nil,   nil, 18358,   nil,
   365,   207, 22538, 23318, 18494,  1494,   158,   nil,   nil,   125,
 18630, 19446,   nil,  1887,   -53, 19582,   -61,   nil,   -16,    -2,
    11,   107,   246,  1497,   206, 20942,  2174,   285,   299,    68,
   385, 21078,   nil,   nil,   377,   376,   510,   nil,   nil,   431,
   nil,   442,  1744,   537,   480,   504,   nil,   nil,   544,  3201,
   nil,   746,   nil,   641,   nil,   nil,   nil,   nil,   nil,   662,
   nil,   665, 20670,   612,    50,    56,   223,    34, 20806,  1630,
   nil,   687,   697, 20534,   907,   nil,   247, 20262, 20126,  6946,
  1179,   752,   779,   783,   nil,   778,   nil, 21842,   855,  1857,
 19310,   nil,   nil,   nil,  3122,   866, 19038, 18766,   nil,  2446,
   nil,  3666,   nil,   nil,  2310,   nil,  3398, 17406, 17270, 17134,
   -53,  2038,   nil,   974,  1076,   nil,   nil,   979,   nil,   nil,
  1020,  1021,   849,  1105, 16862,   nil,  1024,  1137,  1021,  1360,
   nil,   nil,  1168,   nil, 16182,  1069,  1111,   nil,   nil,   nil,
   nil,   nil,   nil, 22418,   nil,  1980,   nil,   nil,   nil,   nil,
  2296,  1218,   nil, 15230,  1241, 15094, 11286,   nil,   nil,   270,
    30,  1331,   nil,  1273,   nil,   nil,  1276,  1279,  1190,   nil,
  6402,   nil,  1844,   nil,   nil,   761, 10470,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,  1231,  1226,   nil,  3530,  8838,   nil,
   nil,   nil,  1292,  1274,   nil,   nil,   nil,  8566,   nil,   nil,
   182,  6934,   nil,  1328,  1293,   nil,   nil,    97,   nil,  1420,
  1421,  6662,  5710,   nil,   nil,  4758,   nil,   nil,  1350,  1326,
  1332,   nil,  1335,  1330,   nil,   nil, 19594,   nil,   nil,   nil,
  4214,   nil,  4078,  1347,   792,  1431,   297,   nil,   nil,  2310,
   nil,   nil,   nil,   261,  1766,  1512,   nil,  2204,   nil,   nil,
   nil,  1630,  1533,  1358, 22598, 22658,  1386,   610,   nil,   nil,
   nil,  1567,   nil,  1453,  1579,   nil,  1496,     0,    -7,   216,
  1766,   nil,   nil,   nil,   nil,  1769 ]

racc_action_default = [
    -3,  -526,    -1,  -514,    -4,    -6,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -268,   -36,   -37,  -526,  -526,   -42,
   -44,   -45,  -279,  -317,  -318,   -49,  -246,  -246,  -246,   -61,
   -10,   -65,   -72,   -74,  -526,  -443,  -526,  -526,  -526,  -526,
  -526,  -516,  -226,  -261,  -262,  -263,  -264,  -265,  -266,  -267,
  -504,  -270,  -526,  -525,  -496,  -287,  -525,  -526,  -526,  -292,
  -295,  -514,  -526,  -526,  -309,  -526,  -319,  -320,  -388,  -389,
  -390,  -391,  -392,  -525,  -395,  -525,  -525,  -525,  -525,  -525,
  -422,  -428,  -429,  -432,  -433,  -434,  -435,  -436,  -437,  -438,
  -439,  -440,  -441,  -442,  -445,  -446,  -526,    -2,  -515,  -521,
  -522,  -523,  -526,  -526,  -526,  -526,  -526,    -3,   -13,  -526,
  -100,  -101,  -102,  -103,  -104,  -105,  -106,  -109,  -110,  -111,
  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,  -121,
  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,  -131,
  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,  -141,
  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,  -151,
  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,  -161,
  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,  -170,  -171,
  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,  -180,  -181,
  -182,  -526,   -18,  -107,   -10,  -526,  -526,  -526,  -525,  -526,
  -526,  -526,  -526,  -526,   -40,  -526,  -443,  -526,  -268,  -526,
  -526,   -10,  -526,   -41,  -218,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,  -526,
  -526,  -526,  -526,  -359,  -361,   -46,  -227,  -239,  -253,  -253,
  -243,  -526,  -254,  -526,  -279,  -317,  -318,  -498,  -526,   -47,
   -48,  -526,  -526,   -53,  -525,  -526,  -286,  -364,  -371,  -373,
   -59,  -369,   -60,  -526,  -514,   -11,   -61,   -10,  -526,  -526,
   -66,   -69,   -10,   -80,  -526,  -526,   -87,  -282,  -516,  -526,
  -321,  -370,  -526,   -71,  -526,   -76,  -275,  -430,  -431,  -526,
  -203,  -204,  -219,  -526,  -517,   -10,  -516,  -228,  -516,  -518,
  -518,  -526,  -526,  -518,  -526,  -288,  -289,  -526,  -526,  -332,
  -333,  -340,  -525,  -462,  -347,  -525,  -525,  -358,  -461,  -463,
  -464,  -465,  -466,  -467,  -526,  -480,  -485,  -486,  -488,  -489,
  -490,  -526,   -43,  -526,  -526,  -526,  -526,  -514,  -526,  -515,
  -443,  -526,  -526,  -268,  -526,  -469,  -470,   -96,  -526,   -98,
  -526,  -268,  -526,  -306,  -443,  -526,  -100,  -101,  -138,  -139,
  -155,  -160,  -167,  -170,  -312,  -526,  -494,  -526,  -393,  -526,
  -408,  -526,  -410,  -526,  -526,  -526,  -400,  -526,  -526,  -406,
  -526,  -421,  -423,  -424,  -425,  -426,   926,    -5,  -524,   -19,
   -20,   -21,   -22,   -23,  -526,  -526,   -15,   -16,   -17,  -526,
  -526,   -25,   -33,  -183,  -254,  -526,  -526,   -26,   -34,   -35,
   -27,  -185,  -526,  -505,  -506,  -246,  -366,  -507,  -508,  -505,
  -246,  -506,  -368,  -510,  -511,   -32,  -192,   -38,   -39,  -526,
  -526,  -525,  -275,  -526,  -526,  -526,  -526,  -285,  -193,  -194,
  -195,  -196,  -197,  -198,  -199,  -200,  -205,  -206,  -207,  -208,
  -209,  -210,  -211,  -212,  -213,  -214,  -215,  -216,  -217,  -220,
  -221,  -222,  -223,  -526,  -525,  -240,  -526,  -241,  -526,  -251,
  -526,  -255,  -501,  -246,  -505,  -506,  -246,  -525,   -54,  -526,
  -516,  -516,  -253,  -239,  -247,  -248,  -526,  -525,  -525,  -526,
  -281,    -9,  -515,  -526,   -62,  -273,   -77,   -67,  -526,  -526,
  -525,  -526,  -526,   -86,  -526,  -430,  -431,   -73,   -78,  -526,
  -526,  -526,  -526,  -526,  -224,  -526,  -380,  -526,  -526,  -229,
  -230,  -520,  -519,  -232,  -520,  -277,  -278,  -497,  -329,   -10,
   -10,  -526,  -331,  -526,  -349,  -356,  -526,  -353,  -354,  -526,
  -357,  -462,  -526,  -471,  -526,  -473,  -475,  -479,  -487,  -491,
   -10,  -322,  -323,  -324,   -10,  -526,  -526,  -526,  -526,   -10,
  -375,  -525,  -526,  -526,  -275,  -301,   -96,   -97,  -526,  -525,
  -526,  -304,  -447,  -526,  -526,  -526,  -310,  -460,  -314,  -512,
  -513,  -516,  -394,  -409,  -412,  -413,  -415,  -396,  -411,  -397,
  -398,  -399,  -526,  -402,  -404,  -405,  -526,  -427,    -7,   -14,
  -108,   -24,  -526,  -260,  -526,  -276,  -526,  -526,   -55,  -237,
  -238,  -365,  -526,   -57,  -367,  -526,  -505,  -506,  -505,  -506,
  -526,  -183,  -284,  -526,  -343,  -526,  -345,   -10,  -253,  -252,
  -256,  -526,  -499,  -500,   -50,  -362,   -51,  -363,   -10,  -233,
  -526,  -526,  -526,  -526,  -526,   -42,  -526,  -245,  -249,  -526,
   -10,   -10,  -280,   -12,   -62,  -526,   -70,   -75,  -526,  -505,
  -506,  -525,  -509,   -85,  -526,  -526,  -191,  -201,  -202,  -526,
  -525,  -525,  -271,  -272,  -518,  -526,  -526,  -330,  -341,  -526,
  -348,  -525,  -342,  -526,  -525,  -525,  -481,  -468,  -526,  -526,
  -478,  -525,  -325,  -525,  -293,  -326,  -327,  -328,  -296,  -526,
  -299,  -526,  -526,  -526,  -505,  -506,  -509,  -274,  -526,   -96,
   -99,  -509,  -526,   -10,  -526,  -449,  -526,   -10,   -10,  -460,
  -526,  -493,  -493,  -493,  -459,  -462,  -483,  -526,  -526,  -526,
   -10,  -401,  -403,  -407,  -184,  -258,  -526,  -526,   -29,  -187,
   -30,  -188,   -56,   -31,  -189,   -58,  -190,  -526,  -526,  -526,
  -276,  -225,  -344,  -526,  -526,  -242,  -257,  -526,  -234,  -235,
  -525,  -525,  -516,  -526,  -526,  -250,  -526,  -526,   -68,   -81,
   -79,  -283,  -525,  -338,   -10,  -381,  -525,  -382,  -383,  -231,
  -334,  -335,  -355,  -526,  -275,  -526,  -351,  -352,  -472,  -474,
  -477,  -526,  -336,  -526,  -526,   -10,   -10,  -298,  -300,  -526,
  -276,  -526,  -276,  -526,  -448,  -307,  -526,  -526,  -516,  -451,
  -526,  -455,  -526,  -457,  -458,  -526,  -526,  -315,  -495,  -414,
  -417,  -418,  -419,  -420,  -526,  -259,   -28,  -186,  -526,  -346,
  -360,   -52,  -526,  -253,  -372,  -374,    -8,   -10,  -387,  -339,
  -526,  -526,  -385,  -274,  -525,  -476,  -290,  -526,  -291,  -526,
  -526,  -526,   -10,  -302,  -305,   -10,  -311,  -313,  -526,  -493,
  -493,  -492,  -493,  -526,  -484,  -482,  -460,  -416,  -236,  -244,
  -526,  -386,   -10,   -88,  -526,  -526,   -95,  -384,  -350,   -10,
  -294,  -297,  -256,  -525,   -10,  -526,  -450,  -526,  -453,  -454,
  -456,   -10,  -380,  -525,  -526,  -526,   -94,  -525,  -376,  -377,
  -378,  -526,  -308,  -493,  -526,  -379,  -526,  -505,  -506,  -509,
   -93,  -337,  -303,  -452,  -316,   -89 ]

clist = [
'13,374,247,247,247,477,680,280,311,290,290,267,271,303,491,392,545,205',
'205,548,550,327,205,205,205,101,12,568,319,517,13,284,284,308,412,419',
'527,113,113,5,290,290,248,248,248,639,488,639,213,249,249,249,205,205',
'108,193,12,205,205,116,116,205,351,360,97,657,362,731,728,696,560,564',
'343,344,688,276,347,734,98,553,874,313,278,101,645,530,533,647,293,537',
'704,708,801,593,577,113,642,552,13,603,782,2,205,205,205,205,13,13,659',
'113,305,345,637,263,270,272,805,399,400,401,402,346,348,804,12,648,806',
'392,718,894,381,383,12,12,390,660,661,5,723,585,865,365,727,587,737',
'403,5,691,876,317,538,695,642,422,354,874,694,316,315,312,376,494,588',
'474,497,498,908,712,821,823,824,425,430,786,850,378,379,581,308,385',
'602,375,388,829,739,245,259,260,740,818,869,733,405,356,13,205,205,205',
'205,192,846,205,205,205,799,397,1,,404,731,,13,205,,,416,416,,,734,12',
'113,,639,,411,417,420,,,434,435,,483,486,,,12,,,,279,,666,493,247,709',
',,,,,,247,,,35,,,290,514,,,,205,205,,,,,518,,290,205,267,,271,13,528',
',529,284,13,327,492,248,35,283,283,,541,249,249,248,284,,101,,921,553',
'249,,700,12,,13,898,899,12,900,871,,871,909,720,871,742,698,350,364',
',364,276,,,,688,276,,503,,12,,733,509,501,863,507,,,,,696,290,,205,205',
',,502,923,,,,35,,731,901,,,565,566,35,35,,360,734,,586,101,,645,647',
',,,,205,,,,,915,,582,792,,871,796,797,,,,,765,,630,,,854,778,752,,,772',
'410,755,,567,,620,425,430,,,624,14,,,,,308,279,,870,,872,490,495,,,',
',,,113,499,,,113,,205,,,553,,14,286,286,639,35,,609,,813,,610,116,816',
'817,789,116,650,651,,668,,35,620,,434,620,,,,,,,353,361,733,,,671,518',
',290,,279,,308,,,279,671,,205,,,,,913,13,638,,,,,284,,205,,618,,14,',
',623,,,787,,14,14,290,205,713,,12,,,,10,35,722,,862,283,35,13,13,663',
'434,,671,855,692,,888,,283,308,671,434,,,,,684,308,13,35,10,738,13,12',
'12,,,13,644,205,910,646,,,,882,,205,,,,205,889,205,12,705,705,,12,,',
',355,12,895,,724,879,327,,,434,,,725,763,434,,14,,,,,,205,205,,,,364',
'205,,770,771,,14,,,10,,914,,773,,,13,10,10,,518,,290,,,748,750,13,,',
'780,753,290,205,,620,,,624,13,13,,12,,284,,,,,,,,827,12,284,,,,,,638',
',,,,12,12,,,,,,14,,,,286,14,,,416,,,,,,,,,286,,,,,,,,205,,,14,,13,,',
'10,13,13,,,,809,811,,,,,,,13,,,10,842,,814,205,815,12,685,686,819,12',
'12,620,620,204,35,,,,,,283,,12,113,,,,701,,,,703,,836,,,711,361,,,13',
',,,,,868,,306,,843,35,35,342,342,,,342,364,205,,13,13,,,10,12,,,,10',
',35,,857,,35,,,434,,35,,,,290,,12,12,705,,,,10,,,,,342,342,342,342,',
'13,764,,,884,,,,,,,916,767,,,13,,,13,,,,,,776,777,12,,,671,,,,,,13,308',
',,,,12,13,,12,,35,13,,,,,,,13,,205,35,,,,12,,,,,,,12,35,35,14,,12,283',
',,286,,,12,,,,283,,314,,434,,,,,,,437,438,,,,,,,320,834,446,,,14,14',
',,,,,361,,,,,380,,382,382,386,389,382,,,14,,,35,14,,,35,35,14,,,,,,',
',,,849,35,,,,,,,,,,,,,,,,,,,,859,860,,,,,,,,,,,,,,,,,10,,,,,,35,,,,',
',,,,,,,,14,,,,,881,,,35,35,,14,,,,,,,10,10,893,414,418,14,14,,,,286',
',,,342,342,,,,,286,10,902,,,10,,,,907,10,,35,,911,,883,,,,,,,,,,591',
'35,,,35,,,,,,,,,479,,481,,,,,482,35,14,,,,14,14,35,,,,,35,,,,,833,14',
'35,489,,,,,,,,,,,10,,,,,,,,,,,10,,,,,,,,,,,,10,10,,,,,,,14,,,,,,,,,',
',,,,,,544,,,544,544,14,14,,,,,,,,,,,,,,306,,,,,,,,,,,,,,,,,,,10,,,,10',
'10,,,14,214,679,,886,246,246,246,,10,,,,,,14,,,14,,,300,301,302,,,,',
',,,613,,,,14,246,246,,,,,14,,,,,14,,,,,,10,14,,619,,,,342,,726,,,,,',
',,,,,,10,10,,,,,,,,,,,,,,,,,640,,314,,643,,,,,,,,,634,,,,,,,656,,619',
',10,619,634,,887,,,,,,,,634,634,,10,,,10,,,,,,,,,,,,,640,,,314,10,,',
',,,,10,,,,,10,,,,,,,10,,,,,,,,413,246,421,246,,,436,,,,,,,,,,,342,,',
'214,,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463',
'464,465,466,467,468,469,470,471,472,473,,,,,745,,,,246,,246,,,,,246',
',,,,,246,246,,,,,,,,246,766,,,,,,,,,,,,,640,,,,,,,,,,342,,,,,,524,,',
',,,,,,,,785,,,,,619,,,,,,,,,783,788,,,,,,,,,,544,,,544,544,,414,,,,783',
',783,,,,,,,,,,,,,,,,,,,,,,,,,,,,835,,,,,,,,,,,,,,,,,,,,,,,,,,,,414,',
',,,,,,246,,,619,619,,,,,,,,,,,848,,,,852,,,,,,,246,,436,631,421,,,,',
',,,,,,,,,875,,,,,,,,,,,,,,,,,246,,246,,246,,,,,,,,,,,,,,892,,655,,,',
',,544,,,,,,,,246,,,892,,,,,,676,677,678,,,,,,,,289,289,246,,,246,,289',
'289,289,,,783,,,,,,,,,,,289,,,783,,,,,289,289,,,,,,,,,,246,,,,,,,,246',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,744,,246,,749,751,,,,,754,,,756,,,,',
',,,761,,,,,,,,246,,,,,,,,,,,,,246,,,,,,,,,,,,,,,,,,,,,,,,,,,246,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,246,289,,289,289,289,289,289,289,289,289,289',
'289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289',
',,,,,246,837,,289,,289,,,,,289,749,751,754,,,,,,,,,,,,,,,246,,,,,289',
',,,,,,,,,,,,289,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,246,,,,,,,,,,,,837',
',,,,,,,,,,,,,,,,,,,,,,246,,289,,,,,,,,,,,,,,,,,246,,,,,,,,,,,,,,,,,',
',,,,,246,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,289,289,289,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,289,,289,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,289',
',,,,,,,,,,289,289,289,,,,,,,,,,289,,,289,,,,,,,,,,,,289,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289,,289,,,,,,',
',,,,289,,,,,,,,289,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,289,,,,,,,,,,289',
',,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,289,,,,,,,,,,,289,289,289,,,,,,,,,,,,,,,289,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,289,,,,,,,,,,,,289,,,,,,,,,,,,,289',
',,,,,,,,,289,,,,,,,,,,,,,,,,,,,289' ]
        racc_goto_table = arr = ::Array.new(2625, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,47,29,29,29,59,10,41,22,52,52,57,57,51,32,47,107,21,21,107,107,105',
'21,21,21,81,20,78,102,43,21,21,21,29,24,24,8,48,48,7,52,52,54,54,54',
'60,35,60,18,56,56,56,21,21,14,14,20,21,21,50,50,21,21,21,4,60,46,108',
'82,138,75,75,16,16,104,38,16,106,6,136,142,56,39,81,58,55,55,58,42,55',
'77,77,76,127,45,48,145,139,21,127,11,2,21,21,21,21,21,21,61,48,85,86',
'36,34,34,34,87,16,16,16,16,88,4,11,20,36,89,47,90,91,124,124,20,20,124',
'36,36,7,92,93,94,95,96,97,98,7,7,109,99,100,101,109,145,22,79,142,103',
'74,72,71,70,62,84,111,113,114,115,116,135,135,135,33,33,117,118,122',
'123,80,29,125,126,83,128,129,130,31,31,31,131,133,134,109,27,19,21,21',
'21,21,21,15,12,21,21,21,140,5,1,,2,108,,21,21,,,54,54,,,106,20,48,,60',
',18,18,18,,,48,18,,33,33,,,20,,,,9,,43,29,29,78,,,,,,,29,,,44,,,52,51',
',,,21,21,,,,,41,,52,21,57,,57,21,51,,51,21,21,105,54,54,44,44,44,,102',
'56,56,54,21,,81,,76,136,56,,136,20,,21,135,135,20,135,106,,106,11,45',
'106,127,139,44,44,,44,38,,,,104,38,,39,,20,,109,39,4,77,42,,,,,138,52',
',21,21,,,6,135,,,,44,,108,82,,,16,16,44,44,,21,106,,46,81,,58,58,,,',
',21,,,,,10,,81,107,,106,107,107,,,,,59,,22,,,109,43,35,,,32,9,35,,4',
',57,33,33,,,57,23,,,,,29,9,,109,,109,31,31,,,,,,,48,31,,,48,,21,,,136',
',23,23,23,60,44,,14,,8,,14,50,8,8,55,50,51,51,,22,,44,57,,48,57,,,,',
',,23,23,109,,,33,41,,52,,9,,29,,,9,33,,21,,,,,109,21,56,,,,,21,,21,',
'34,,23,,,34,,,24,,23,23,52,21,22,,20,,,,17,44,22,,75,44,44,21,21,7,48',
',33,136,21,,107,,44,29,33,48,,,,,56,29,21,44,17,51,21,20,20,,,21,34',
'21,78,34,,,,75,,21,,,,21,75,21,20,81,81,,20,,,,17,20,8,,16,59,105,,',
'48,,,81,102,48,,23,,,,,,21,21,,,,44,21,,33,33,,23,,,17,,8,,29,,,21,17',
'17,,41,,52,,,18,18,21,,,41,18,52,21,,57,,,57,21,21,,20,,21,,,,,,,,47',
'20,21,,,,,,56,,,,,20,20,,,,,,23,,,,23,23,,,54,,,,,,,,,23,,,,,,,,21,',
',23,,21,,,17,21,21,,,,54,16,,,,,,,21,,,17,51,,81,21,81,20,9,9,81,20',
'20,57,57,26,44,,,,,,44,,20,48,,,,9,,,,9,,18,,,9,23,,,21,,,,,,51,,26',
',54,44,44,26,26,,,26,44,21,,21,21,,,17,20,,,,17,,44,,16,,44,,,48,,44',
',,,52,,20,20,81,,,,17,,,,,26,26,26,26,,21,9,,,21,,,,,,,22,9,,,21,,,21',
',,,,,9,9,20,,,33,,,,,,21,29,,,,,20,21,,20,,44,21,,,,,,,21,,21,44,,,',
'20,,,,,,,20,44,44,23,,20,44,,,23,,,20,,,,44,,25,,48,,,,,,,26,26,,,,',
',,53,9,26,,,23,23,,,,,,23,,,,,53,,53,53,53,53,53,,,23,,,44,23,,,44,44',
'23,,,,,,,,,,9,44,,,,,,,,,,,,,,,,,,,,9,9,,,,,,,,,,,,,,,,,17,,,,,,44,',
',,,,,,,,,,,23,,,,,9,,,44,44,,23,,,,,,,17,17,9,25,25,23,23,,,,23,,,,26',
'26,,,,,23,17,9,,,17,,,,9,17,,44,,9,,44,,,,,,,,,,26,44,,,44,,,,,,,,,25',
',25,,,,,25,44,23,,,,23,23,44,,,,,44,,,,,23,23,44,53,,,,,,,,,,,17,,,',
',,,,,,,17,,,,,,,,,,,,17,17,,,,,,,23,,,,,,,,,,,,,,,,53,,,53,53,23,23',
',,,,,,,,,,,,,26,,,,,,,,,,,,,,,,,,,17,,,,17,17,,,23,28,26,,23,28,28,28',
',17,,,,,,23,,,23,,,28,28,28,,,,,,,,25,,,,23,28,28,,,,,23,,,,,23,,,,',
',17,23,,53,,,,26,,26,,,,,,,,,,,,17,17,,,,,,,,,,,,,,,,,25,,25,,25,,,',
',,,,,53,,,,,,,25,,53,,17,53,53,,17,,,,,,,,53,53,,17,,,17,,,,,,,,,,,',
',25,,,25,17,,,,,,,17,,,,,17,,,,,,,17,,,,,,,,28,28,28,28,,,28,,,,,,,',
',,,26,,,28,,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,28,,,,,25,,,,28,,28,,,,,28,,,,,,28,28,,,,,,,,28,25',
',,,,,,,,,,,,25,,,,,,,,,,26,,,,,,28,,,,,,,,,,,25,,,,,53,,,,,,,,,53,53',
',,,,,,,,,53,,,53,53,,25,,,,53,,53,,,,,,,,,,,,,,,,,,,,,,,,,,,,25,,,,',
',,,,,,,,,,,,,,,,,,,,,,,25,,,,,,,,28,,,53,53,,,,,,,,,,,53,,,,53,,,,,',
',28,,28,28,28,,,,,,,,,,,,,,25,,,,,,,,,,,,,,,,,28,,28,,28,,,,,,,,,,,',
',,25,,28,,,,,,53,,,,,,,,28,,,25,,,,,,28,28,28,,,,,,,,37,37,28,,,28,',
'37,37,37,,,53,,,,,,,,,,,37,,,53,,,,,37,37,,,,,,,,,,28,,,,,,,,28,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,28,,28,28,,,,,28,,,28,,,,,,,,28,,,,',
',,,28,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,28,37,,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37',
'37,37,37,37,37,37,37,37,37,,,,,,28,28,,37,,37,,,,,37,28,28,28,,,,,,',
',,,,,,,,28,,,,,37,,,,,,,,,,,,,37,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,',
'28,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,,,,,,,28,,37,,,,,,,,,,,,,,,,,28,,,',
',,,,,,,,,,,,,,,,,,,28,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,37,37',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,37,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'37,,,,,,,,,,,37,37,37,,,,,,,,,,37,,,37,,,,,,,,,,,,37,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,37,,,,,,,,,,,37',
',,,,,,,37,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,37,,,,,,37,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,',
',,,,,,,,,37,37,37,,,,,,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,37,,,,,,,,,,,,,37,,,,,,,,,,37,,,,,,',
',,,,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2625, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   206,   101,   nil,    61,   107,    75,    39,  -269,   211,
  -520,  -580,  -582,   nil,    47,   191,    15,   532,    30,   131,
    26,     0,   -45,   416,  -161,   879,   740,    84,  1246,   -20,
   nil,   163,  -250,   -28,    87,  -217,  -362,  1744,    45,    52,
   nil,   -24,    56,  -265,   256,  -264,     3,   -64,    30,   nil,
    52,   -28,   -22,   894,    20,  -224,    27,   -15,  -399,  -244,
  -431,  -388,  -104,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    95,   105,   103,   nil,   101,  -273,  -609,  -475,  -321,    92,
  -185,    22,  -519,   116,  -213,    59,    52,  -588,    61,  -582,
  -447,  -734,  -443,  -224,  -675,    77,  -444,  -231,  -444,  -679,
    93,  -167,   -28,  -391,  -469,   -35,  -510,  -306,  -520,  -396,
   nil,   -80,   nil,  -104,  -104,  -727,  -403,  -508,  -612,   nil,
   nil,   nil,   104,   103,    55,   102,  -205,  -286,   104,  -556,
  -411,  -408,   nil,  -540,  -630,  -563,  -255,   nil,  -478,  -237,
  -495,   nil,  -742,   nil,   nil,  -382 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   349,   275,   nil,   526,
   nil,   802,   nil,   274,   nil,   nil,   nil,   209,    16,    11,
   210,   299,   nil,   208,   nil,   252,    15,   nil,    19,    20,
    21,   nil,    25,   674,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   206,   359,   nil,   115,   428,   114,
    69,   nil,    42,   307,   309,   nil,   310,   426,   621,   475,
   250,   nil,   nil,   265,    43,    44,    45,    46,    47,    48,
    49,   nil,   266,    55,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   561,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   322,   321,   690,   324,   nil,   325,   326,
   244,   nil,   432,   nil,   nil,   nil,   nil,   nil,   nil,    68,
    70,    71,    72,   nil,   nil,   nil,   nil,   598,   nil,   nil,
   nil,   nil,   391,   730,   732,   nil,   333,   328,   335,   nil,
   555,   556,   736,   338,   341,   257 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 139, :_reduce_none,
  2, 140, :_reduce_2,
  0, 141, :_reduce_3,
  1, 141, :_reduce_4,
  3, 141, :_reduce_5,
  1, 143, :_reduce_none,
  4, 143, :_reduce_7,
  4, 146, :_reduce_8,
  2, 147, :_reduce_9,
  0, 151, :_reduce_10,
  1, 151, :_reduce_11,
  3, 151, :_reduce_12,
  0, 165, :_reduce_13,
  4, 145, :_reduce_14,
  3, 145, :_reduce_15,
  3, 145, :_reduce_none,
  3, 145, :_reduce_17,
  2, 145, :_reduce_18,
  3, 145, :_reduce_19,
  3, 145, :_reduce_20,
  3, 145, :_reduce_21,
  3, 145, :_reduce_22,
  3, 145, :_reduce_23,
  4, 145, :_reduce_none,
  3, 145, :_reduce_25,
  3, 145, :_reduce_26,
  3, 145, :_reduce_27,
  6, 145, :_reduce_none,
  5, 145, :_reduce_29,
  5, 145, :_reduce_none,
  5, 145, :_reduce_none,
  3, 145, :_reduce_none,
  3, 145, :_reduce_33,
  3, 145, :_reduce_34,
  3, 145, :_reduce_35,
  1, 145, :_reduce_none,
  1, 164, :_reduce_none,
  3, 164, :_reduce_38,
  3, 164, :_reduce_39,
  2, 164, :_reduce_40,
  2, 164, :_reduce_41,
  1, 164, :_reduce_none,
  1, 154, :_reduce_none,
  1, 156, :_reduce_none,
  1, 156, :_reduce_none,
  2, 156, :_reduce_46,
  2, 156, :_reduce_47,
  2, 156, :_reduce_48,
  1, 168, :_reduce_none,
  4, 168, :_reduce_none,
  4, 168, :_reduce_none,
  4, 173, :_reduce_none,
  2, 167, :_reduce_53,
  3, 167, :_reduce_none,
  4, 167, :_reduce_55,
  5, 167, :_reduce_none,
  4, 167, :_reduce_57,
  5, 167, :_reduce_none,
  2, 167, :_reduce_59,
  2, 167, :_reduce_60,
  1, 157, :_reduce_61,
  3, 157, :_reduce_62,
  1, 177, :_reduce_63,
  3, 177, :_reduce_64,
  1, 176, :_reduce_65,
  2, 176, :_reduce_66,
  3, 176, :_reduce_67,
  5, 176, :_reduce_none,
  2, 176, :_reduce_69,
  4, 176, :_reduce_none,
  2, 176, :_reduce_71,
  1, 176, :_reduce_72,
  3, 176, :_reduce_none,
  1, 179, :_reduce_74,
  3, 179, :_reduce_75,
  2, 178, :_reduce_76,
  3, 178, :_reduce_77,
  1, 181, :_reduce_none,
  3, 181, :_reduce_none,
  1, 180, :_reduce_80,
  4, 180, :_reduce_81,
  3, 180, :_reduce_82,
  3, 180, :_reduce_none,
  3, 180, :_reduce_none,
  3, 180, :_reduce_none,
  2, 180, :_reduce_none,
  1, 180, :_reduce_none,
  1, 155, :_reduce_88,
  4, 155, :_reduce_89,
  3, 155, :_reduce_90,
  3, 155, :_reduce_91,
  3, 155, :_reduce_92,
  3, 155, :_reduce_93,
  2, 155, :_reduce_94,
  1, 155, :_reduce_none,
  1, 183, :_reduce_none,
  2, 184, :_reduce_97,
  1, 184, :_reduce_98,
  3, 184, :_reduce_99,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_103,
  1, 185, :_reduce_104,
  1, 152, :_reduce_105,
  1, 152, :_reduce_none,
  1, 153, :_reduce_107,
  3, 153, :_reduce_108,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  3, 166, :_reduce_183,
  5, 166, :_reduce_184,
  3, 166, :_reduce_185,
  6, 166, :_reduce_186,
  5, 166, :_reduce_187,
  5, 166, :_reduce_none,
  5, 166, :_reduce_none,
  5, 166, :_reduce_none,
  4, 166, :_reduce_none,
  3, 166, :_reduce_none,
  3, 166, :_reduce_193,
  3, 166, :_reduce_194,
  3, 166, :_reduce_195,
  3, 166, :_reduce_196,
  3, 166, :_reduce_197,
  3, 166, :_reduce_198,
  3, 166, :_reduce_199,
  3, 166, :_reduce_200,
  4, 166, :_reduce_none,
  4, 166, :_reduce_none,
  2, 166, :_reduce_203,
  2, 166, :_reduce_204,
  3, 166, :_reduce_205,
  3, 166, :_reduce_206,
  3, 166, :_reduce_207,
  3, 166, :_reduce_208,
  3, 166, :_reduce_209,
  3, 166, :_reduce_210,
  3, 166, :_reduce_211,
  3, 166, :_reduce_212,
  3, 166, :_reduce_213,
  3, 166, :_reduce_214,
  3, 166, :_reduce_215,
  3, 166, :_reduce_216,
  3, 166, :_reduce_217,
  2, 166, :_reduce_218,
  2, 166, :_reduce_219,
  3, 166, :_reduce_220,
  3, 166, :_reduce_221,
  3, 166, :_reduce_222,
  3, 166, :_reduce_223,
  3, 166, :_reduce_224,
  5, 166, :_reduce_225,
  1, 166, :_reduce_none,
  1, 163, :_reduce_none,
  1, 160, :_reduce_228,
  2, 160, :_reduce_229,
  2, 160, :_reduce_230,
  4, 160, :_reduce_231,
  2, 160, :_reduce_232,
  3, 195, :_reduce_233,
  4, 195, :_reduce_234,
  4, 195, :_reduce_none,
  6, 195, :_reduce_none,
  1, 196, :_reduce_237,
  1, 196, :_reduce_none,
  1, 169, :_reduce_239,
  2, 169, :_reduce_240,
  2, 169, :_reduce_241,
  4, 169, :_reduce_242,
  1, 169, :_reduce_243,
  4, 199, :_reduce_none,
  1, 199, :_reduce_none,
  0, 201, :_reduce_246,
  2, 172, :_reduce_247,
  1, 200, :_reduce_none,
  2, 200, :_reduce_249,
  3, 200, :_reduce_250,
  2, 198, :_reduce_251,
  2, 197, :_reduce_252,
  0, 197, :_reduce_253,
  1, 192, :_reduce_254,
  2, 192, :_reduce_255,
  3, 192, :_reduce_256,
  4, 192, :_reduce_257,
  3, 162, :_reduce_258,
  4, 162, :_reduce_259,
  2, 162, :_reduce_260,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  0, 223, :_reduce_270,
  4, 190, :_reduce_271,
  4, 190, :_reduce_272,
  3, 190, :_reduce_273,
  3, 190, :_reduce_274,
  2, 190, :_reduce_275,
  4, 190, :_reduce_276,
  3, 190, :_reduce_277,
  3, 190, :_reduce_278,
  1, 190, :_reduce_279,
  4, 190, :_reduce_280,
  3, 190, :_reduce_281,
  1, 190, :_reduce_282,
  5, 190, :_reduce_283,
  4, 190, :_reduce_284,
  3, 190, :_reduce_285,
  2, 190, :_reduce_286,
  1, 190, :_reduce_none,
  2, 190, :_reduce_288,
  2, 190, :_reduce_289,
  6, 190, :_reduce_290,
  6, 190, :_reduce_291,
  0, 224, :_reduce_292,
  0, 225, :_reduce_293,
  7, 190, :_reduce_294,
  0, 226, :_reduce_295,
  0, 227, :_reduce_296,
  7, 190, :_reduce_297,
  5, 190, :_reduce_298,
  4, 190, :_reduce_299,
  5, 190, :_reduce_300,
  0, 228, :_reduce_301,
  0, 229, :_reduce_302,
  9, 190, :_reduce_303,
  0, 230, :_reduce_304,
  6, 190, :_reduce_305,
  0, 231, :_reduce_306,
  0, 232, :_reduce_307,
  8, 190, :_reduce_308,
  0, 233, :_reduce_309,
  0, 234, :_reduce_310,
  6, 190, :_reduce_311,
  0, 235, :_reduce_312,
  6, 190, :_reduce_313,
  0, 236, :_reduce_314,
  0, 237, :_reduce_315,
  9, 190, :_reduce_316,
  1, 190, :_reduce_317,
  1, 190, :_reduce_318,
  1, 190, :_reduce_319,
  1, 190, :_reduce_none,
  1, 159, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  2, 213, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  2, 212, :_reduce_329,
  3, 238, :_reduce_330,
  2, 238, :_reduce_331,
  1, 238, :_reduce_none,
  1, 238, :_reduce_none,
  3, 239, :_reduce_334,
  3, 239, :_reduce_335,
  1, 214, :_reduce_336,
  5, 214, :_reduce_337,
  1, 149, :_reduce_none,
  2, 149, :_reduce_339,
  1, 241, :_reduce_340,
  3, 241, :_reduce_341,
  3, 242, :_reduce_342,
  1, 174, :_reduce_none,
  2, 174, :_reduce_344,
  1, 174, :_reduce_345,
  3, 174, :_reduce_346,
  1, 243, :_reduce_347,
  2, 245, :_reduce_348,
  1, 245, :_reduce_349,
  6, 240, :_reduce_350,
  4, 240, :_reduce_351,
  4, 240, :_reduce_352,
  2, 240, :_reduce_353,
  2, 240, :_reduce_354,
  4, 240, :_reduce_355,
  2, 240, :_reduce_356,
  2, 240, :_reduce_357,
  1, 240, :_reduce_358,
  0, 249, :_reduce_359,
  5, 248, :_reduce_360,
  2, 170, :_reduce_361,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  2, 211, :_reduce_364,
  4, 211, :_reduce_365,
  3, 211, :_reduce_366,
  4, 211, :_reduce_367,
  3, 211, :_reduce_368,
  2, 211, :_reduce_369,
  1, 211, :_reduce_370,
  0, 251, :_reduce_371,
  5, 210, :_reduce_372,
  0, 252, :_reduce_373,
  5, 210, :_reduce_374,
  0, 254, :_reduce_375,
  6, 216, :_reduce_376,
  1, 253, :_reduce_377,
  1, 253, :_reduce_none,
  6, 148, :_reduce_379,
  0, 148, :_reduce_380,
  1, 255, :_reduce_381,
  1, 255, :_reduce_none,
  1, 255, :_reduce_none,
  2, 256, :_reduce_384,
  1, 256, :_reduce_385,
  2, 150, :_reduce_386,
  1, 150, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 203, :_reduce_391,
  1, 259, :_reduce_none,
  2, 259, :_reduce_none,
  3, 260, :_reduce_394,
  1, 260, :_reduce_395,
  3, 204, :_reduce_396,
  3, 205, :_reduce_397,
  3, 206, :_reduce_398,
  3, 206, :_reduce_399,
  1, 263, :_reduce_400,
  3, 263, :_reduce_401,
  1, 264, :_reduce_402,
  2, 264, :_reduce_403,
  3, 207, :_reduce_404,
  3, 207, :_reduce_405,
  1, 266, :_reduce_406,
  3, 266, :_reduce_407,
  1, 261, :_reduce_408,
  2, 261, :_reduce_409,
  1, 262, :_reduce_410,
  2, 262, :_reduce_411,
  1, 265, :_reduce_412,
  0, 268, :_reduce_413,
  3, 265, :_reduce_414,
  0, 269, :_reduce_415,
  4, 265, :_reduce_416,
  1, 267, :_reduce_417,
  1, 267, :_reduce_418,
  1, 267, :_reduce_419,
  1, 267, :_reduce_none,
  2, 188, :_reduce_421,
  1, 188, :_reduce_422,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  3, 258, :_reduce_427,
  1, 257, :_reduce_428,
  1, 257, :_reduce_429,
  2, 257, :_reduce_none,
  2, 257, :_reduce_none,
  1, 182, :_reduce_432,
  1, 182, :_reduce_433,
  1, 182, :_reduce_434,
  1, 182, :_reduce_435,
  1, 182, :_reduce_436,
  1, 182, :_reduce_437,
  1, 182, :_reduce_438,
  1, 182, :_reduce_439,
  1, 182, :_reduce_440,
  1, 182, :_reduce_441,
  1, 182, :_reduce_442,
  1, 208, :_reduce_443,
  1, 158, :_reduce_444,
  1, 161, :_reduce_445,
  1, 161, :_reduce_none,
  1, 218, :_reduce_447,
  3, 218, :_reduce_448,
  2, 218, :_reduce_449,
  4, 220, :_reduce_450,
  2, 220, :_reduce_451,
  6, 271, :_reduce_452,
  4, 271, :_reduce_453,
  4, 271, :_reduce_454,
  2, 271, :_reduce_455,
  4, 271, :_reduce_456,
  2, 271, :_reduce_457,
  2, 271, :_reduce_458,
  1, 271, :_reduce_459,
  0, 271, :_reduce_460,
  1, 274, :_reduce_none,
  1, 274, :_reduce_462,
  1, 275, :_reduce_463,
  1, 275, :_reduce_464,
  1, 275, :_reduce_465,
  1, 275, :_reduce_466,
  1, 276, :_reduce_467,
  3, 276, :_reduce_468,
  1, 217, :_reduce_none,
  1, 217, :_reduce_none,
  1, 278, :_reduce_471,
  3, 278, :_reduce_none,
  1, 279, :_reduce_473,
  3, 279, :_reduce_474,
  1, 277, :_reduce_none,
  4, 277, :_reduce_none,
  3, 277, :_reduce_none,
  2, 277, :_reduce_none,
  1, 277, :_reduce_none,
  1, 246, :_reduce_480,
  3, 246, :_reduce_481,
  3, 280, :_reduce_482,
  1, 272, :_reduce_483,
  3, 272, :_reduce_484,
  1, 281, :_reduce_none,
  1, 281, :_reduce_none,
  2, 247, :_reduce_487,
  1, 247, :_reduce_488,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  2, 244, :_reduce_491,
  2, 273, :_reduce_492,
  0, 273, :_reduce_493,
  1, 221, :_reduce_494,
  4, 221, :_reduce_495,
  0, 209, :_reduce_496,
  2, 209, :_reduce_497,
  1, 194, :_reduce_498,
  3, 194, :_reduce_499,
  3, 283, :_reduce_500,
  2, 283, :_reduce_501,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 250, :_reduce_none,
  1, 250, :_reduce_none,
  1, 250, :_reduce_none,
  1, 222, :_reduce_none,
  1, 222, :_reduce_none,
  0, 142, :_reduce_none,
  1, 142, :_reduce_none,
  0, 189, :_reduce_none,
  1, 189, :_reduce_none,
  0, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 144, :_reduce_none,
  2, 144, :_reduce_none,
  0, 191, :_reduce_525 ]

racc_reduce_n = 526

racc_shift_n = 926

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tREGEXP_END => 63,
  :tUPLUS => 64,
  :tUMINUS => 65,
  :tUMINUS_NUM => 66,
  :tPOW => 67,
  :tCMP => 68,
  :tEQ => 69,
  :tEQQ => 70,
  :tNEQ => 71,
  :tGEQ => 72,
  :tLEQ => 73,
  :tANDOP => 74,
  :tOROP => 75,
  :tMATCH => 76,
  :tNMATCH => 77,
  :tDOT => 78,
  :tDOT2 => 79,
  :tDOT3 => 80,
  :tAREF => 81,
  :tASET => 82,
  :tLSHFT => 83,
  :tRSHFT => 84,
  :tCOLON2 => 85,
  :tCOLON3 => 86,
  :tOP_ASGN => 87,
  :tASSOC => 88,
  :tLPAREN => 89,
  :tLPAREN2 => 90,
  :tRPAREN => 91,
  :tLPAREN_ARG => 92,
  :ARRAY_BEG => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tPLUS => 104,
  :tMINUS => 105,
  :tLT => 106,
  :tGT => 107,
  :tPIPE => 108,
  :tBANG => 109,
  :tCARET => 110,
  :tLCURLY => 111,
  :tRCURLY => 112,
  :tBACK_REF2 => 113,
  :tSYMBEG => 114,
  :tSTRING_BEG => 115,
  :tXSTRING_BEG => 116,
  :tREGEXP_BEG => 117,
  :tWORDS_BEG => 118,
  :tAWORDS_BEG => 119,
  :tSTRING_DBEG => 120,
  :tSTRING_DVAR => 121,
  :tSTRING_END => 122,
  :tSTRING => 123,
  :tSYMBOL => 124,
  :tNL => 125,
  :tEH => 126,
  :tCOLON => 127,
  :tCOMMA => 128,
  :tSPACE => 129,
  :tSEMI => 130,
  :tLAMBDA => 131,
  :tLAMBEG => 132,
  :tLBRACK2 => 133,
  :tLBRACK => 134,
  :tEQL => 135,
  :tLOWEST => 136,
  "-@NUM" => 137 }

racc_nt_base = 138

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@18",
  "operation3",
  "@19",
  "@20",
  "cases",
  "@21",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@22",
  "@23",
  "sym",
  "f_args",
  "f_optarg",
  "opt_f_block_arg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_47(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[0], val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_90(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

def _reduce_183(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_185(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_186(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_187(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

def _reduce_193(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

# reduce 201 omitted

# reduce 202 omitted

def _reduce_203(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      result = val[1] if [:int, :float].include? val[1].type
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_unary_call(['!', []], new_binary_call(
                                 val[0], ['==', []], val[2]))
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_not(val[1], new_binary_call(
                                 val[0], ['=~', []], val[2]))
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_if(val[1], val[0], val[2], val[4])
                    
    result
end

# reduce 226 omitted

# reduce 227 omitted

def _reduce_228(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_229(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_230(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_231(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_232(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_233(val, _values, result)
                      result = []
                    
    result
end

def _reduce_234(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 235 omitted

# reduce 236 omitted

def _reduce_237(val, _values, result)
                      result = []
                    
    result
end

# reduce 238 omitted

def _reduce_239(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_240(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_243(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 244 omitted

# reduce 245 omitted

def _reduce_246(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_247(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_250(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_251(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_252(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_253(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_254(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_255(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_256(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_257(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_258(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_259(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_260(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

def _reduce_270(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_271(val, _values, result)
                      result = new_begin(val[0], val[2])
                    
    result
end

def _reduce_272(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_273(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_274(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_275(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_276(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_277(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_278(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_279(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_280(val, _values, result)
                      result = new_yield val[0], val[2]
                    
    result
end

def _reduce_281(val, _values, result)
                      result = new_yield val[0], []
                    
    result
end

def _reduce_282(val, _values, result)
                      result = new_yield val[0], []
                    
    result
end

def _reduce_283(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_284(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_285(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_286(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 287 omitted

def _reduce_288(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_289(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_292(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_293(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_294(val, _values, result)
                      result = new_while(val[0], val[2], val[5])
                    
    result
end

def _reduce_295(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_296(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_297(val, _values, result)
                      result = new_until(val[0], val[2], val[5])
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_299(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_300(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_301(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_302(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_303(val, _values, result)
                      result = new_for(val[0], val[4], val[1], val[7])
                    
    result
end

def _reduce_304(val, _values, result)
                      # ...
                    
    result
end

def _reduce_305(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_306(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_307(val, _values, result)
                      # ...
                    
    result
end

def _reduce_308(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_309(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_310(val, _values, result)
                      # ...
                    
    result
end

def _reduce_311(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_312(val, _values, result)
                      push_scope
                    
    result
end

def _reduce_313(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_314(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_315(val, _values, result)
                      push_scope
                    
    result
end

def _reduce_316(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_317(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_318(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_319(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 320 omitted

# reduce 321 omitted

# reduce 322 omitted

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

def _reduce_329(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_330(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_331(val, _values, result)
                      result = nil
                    
    result
end

# reduce 332 omitted

# reduce 333 omitted

def _reduce_334(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_335(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_336(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_337(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 338 omitted

def _reduce_339(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_340(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_341(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_342(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 343 omitted

def _reduce_344(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_345(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_346(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_347(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_348(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_349(val, _values, result)
                      nil
                    
    result
end

def _reduce_350(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_351(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_359(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_360(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_361(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 362 omitted

# reduce 363 omitted

def _reduce_364(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_365(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_371(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_372(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_373(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_374(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_375(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_376(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push *val[5] if val[5]
                    
    result
end

def _reduce_377(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 378 omitted

def _reduce_379(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_380(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_381(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 382 omitted

# reduce 383 omitted

def _reduce_384(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_385(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_386(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 387 omitted

# reduce 388 omitted

# reduce 389 omitted

# reduce 390 omitted

def _reduce_391(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 392 omitted

# reduce 393 omitted

def _reduce_394(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_395(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_396(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_397(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_398(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_399(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_400(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_401(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_402(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_403(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_404(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_405(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_406(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_407(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_408(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_409(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_410(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_411(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_412(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_413(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_414(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_415(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_416(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_417(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_418(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_419(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 420 omitted

def _reduce_421(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_422(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 423 omitted

# reduce 424 omitted

# reduce 425 omitted

# reduce 426 omitted

def _reduce_427(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_428(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_429(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

# reduce 430 omitted

# reduce 431 omitted

def _reduce_432(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_433(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_434(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_435(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_436(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_437(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_438(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_439(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_440(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_441(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_442(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_443(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_445(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 446 omitted

def _reduce_447(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_448(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_449(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_450(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_451(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_452(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_460(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 461 omitted

def _reduce_462(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_463(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_464(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_465(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_466(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_467(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_468(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 469 omitted

# reduce 470 omitted

def _reduce_471(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 472 omitted

def _reduce_473(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_474(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 475 omitted

# reduce 476 omitted

# reduce 477 omitted

# reduce 478 omitted

# reduce 479 omitted

def _reduce_480(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_481(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_482(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_483(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_484(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 485 omitted

# reduce 486 omitted

def _reduce_487(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_488(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 489 omitted

# reduce 490 omitted

def _reduce_491(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_492(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_493(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_494(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_495(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_496(val, _values, result)
                      result = []
                    
    result
end

def _reduce_497(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_498(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_499(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_500(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_501(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

# reduce 502 omitted

# reduce 503 omitted

# reduce 504 omitted

# reduce 505 omitted

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

def _reduce_525(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
